<?PHP

require 'urls.inc.php'; // needs symbols but no database
require '../acct/alib.inc.php';
require 'email.inc.php';

function parseurl ($spec,&$prot,&$host,&$port,&$file)
{ // shred a spec into its constituent pieces
	//echo "parseurl: $spec\r\n";
	$httpsloc = strpos($spec,"https://");
	$httploc = strpos($spec, "http://");
	if (($httpsloc===false) && ($httploc===false)) return false;
	if ($httpsloc===false) {$pos = $httploc + strlen("http://"); $prot = "http:";} else
	{$pos = $httpsloc + strlen("https://"); $prot = "https:";}
	$colonloc = strpos ($spec,":",$pos);
	$slashloc = strpos ($spec,"/",$pos);
	if ($slashloc === false) return false;
	if ($colonloc != false){ $port = trim(substr($spec,$colonloc+1,$slashloc-$colonloc-1));
	$host = trim(substr($spec,$pos,$colonloc-$pos));}
	else { if ($prot == "https:") $port=443; else $port = 80; $host = trim(substr($spec,$pos,$slashloc-$pos)); }
	$file = trim(substr($spec,$slashloc));//include / as leader in filespec
	//echo "parseurl: $prot $host $port $file\r\n";
	return true;
}

function postcall($ipaddr,$port,$file,$guid)
{
	//echo "calling $ipaddr:$port $file with $guid\r\n";
	$postdata = "Command=GET&guid=".$guid;
	$contlen = strlen($postdata);

	$out = "POST $file HTTP/1.1\r\n";
	$out .= "Host: cxp\r\n"; //donot remove
	$out .= "Content-type: application/x-www-form-urlencoded\r\n";
	$out .= "Content-length: $contlen\r\n";
	$out .= "Connection: Close\r\n\r\n";

	$out .= $postdata;
	// send the post
	if ($port=='')$port=443; //juggle

	$fp = fsockopen($ipaddr, $port, $errno, $errstr, 30);
	if (!$fp) {
		$retstr =  "$errstr ($errno)<br />\n"; return false;
	} ;

	fputs($fp, $out);   //header

	$response = stream_get_contents($fp); // new with php5
	fclose($fp);
	//		echo $response; //see whats coming
	$sz = strlen('<?xml version="1.0" encoding="UTF-8"?>');
	$where = strpos($response,'<?xml version="1.0" encoding="UTF-8"?>');
	$response = substr($response,$where+$sz);
	$sz = strlen('</ContinuityOfCareRecord>');
	$where = strpos($response,'</ContinuityOfCareRecord>');
	$response = substr($response,0,$where+$sz);
	return trim($response);

}


function cxppostget ($remoteurl,$args)
{
	// get address of remote part
	if (parseurl ($remoteurl,$prot,$host,$port,$filespec)=== false)
	return false;
	if ($prot=='https:'){$host = 'ssl://'.$host; }// see php manual

	// start to assemble the xml data block as per the spec
	// if no opcode then don't make an xmldatablock
	return postcall($host,$port,$filespec,$args);
}

// donner 09 sep 06
// accept incoming REST call, assemble ccrs and docs ,  return XML
//
// args:
//		 a=pipe delimited list of args
//		 c=command string
//		 mckey = medcommons widget key

function bx($mckey)
{
	$sig = "bills signature";
	// this function does the backup work
	// $a = url of acct rest server
	// $b = mckeyh
	$au = $GLOBALS['Accounts_Url']."A.php?mckey=$mckey";
	//echo $au;
	$hresult = file_get_contents($au);

	//
	$docs='';
	$doclist = explode ('|',file_get_contents($GLOBALS['Commons_Url']."G.php?format=pipe&guids=$hresult"));
	$count =0;
	foreach ($doclist as $doc) {
		list($guidd,$gurl) = explode(',',$doc);
		$result = cxppostget($gurl.'/CxpRestServlet',$guidd);
		if ($result === false) $result = "<error>cxp failed to access $gurl with $guidd</error>";
		$docs .= "<doc><guid>".$guidd."</guid>\r\n<ccrcontents>\r\n$result\r\n</ccrcontents></doc>";
		if ($count++ > 8) break; // just do one
	};


	return array ($sig,"<saveset><header>$hresult</header><body>$docs</body></saveset>");
}

if (!isset($_REQUEST['c'])) $c='do'; else
$c= $_REQUEST['c'];



list($accid,$fn,$ln,$email,$idp,$cookie) = aconfirm_logged_in (); // does not return if not lo
// fake an mckey, it needs to be passed in the REST web service

$mckey = base64_encode(sha1($accid.$email)."|$accid|$email");

// use the command code to figure out what the caller wants to get back

switch ($c){

	case'form'	:{
		if (isset($mckey)) $mckey = "<tr><td>mckey</td><td><i>hidden</i><input type='hidden' name='mckey' value='$mckey' /></td></tr>\r\n";
		else $mckey='';
		$gmt = gmstrftime("%b %d %Y %H:%M:%S");
		$uri = htmlspecialchars($_SERVER["REQUEST_METHOD"].' '.$_SERVER ['REQUEST_URI']);
		$aout ="processed by ".$_SERVER['HTTP_HOST'].' '.$_SERVER['SERVER_ADDR'].':'.
		$_SERVER['SERVER_PORT']." $gmt GMT";

		$out = <<<XXX
<!-- form generated by Bx server $uri $aout -->
<h4>test form generated by Bxserver $aout</h4>
<i>View source, copy and paste to your editor, customize this as you see fit, and pasteinto your own application, wiki, blog, or web site</i>
<form method='POST' action='Bx.php'>
<table>
$mckey
<tr><td>accserver</td><td><i>hidden</i><input type='hidden' name='arga' value='Bx.php' /></td></tr>\r\n
<tr><td>command</td><td><i>hidden hardwired to 'xml'</i><input type='hidden' name='c' value='xml' /></td></tr>\r\n
<tr><td>argj</td><td><input type=text name='argj' value='ARGJ' /></td></tr>\r\n
<tr><td>submit</td><td><input type=submit name='submit' value='try it' /></td></tr>\r\n
</table>
</form>
<!-- end of form generated from Bx server  -->
XXX;
		header ("Content-type: text/html");
		break;
	}
	case 'email' :
		{
			$gmt = gmstrftime("%b %d %Y %H:%M:%S");
			$subjectline="MedCommons Backup for ".$_SERVER['HTTP_HOST']."/$accid at $gmt GMT";
			list ($sig,$xml) = bx($mckey);

			$html = <<<EOF
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv='Content-Type' content="text/html; charset=iso-8859-1" />
    <title>$subjectline</title>
  </head>
  <body>
    <p>
    <img src='cid:logo' />
    <br />

    <div>$xml</div>
    </p>
  </body>
</html>
EOF;

			$srv = $_SERVER['SERVER_NAME'];

			$stat = send_mc_email($email, $subjectline,
					      $xml, $html,
					      array('logo' => get_logo_as_attachment()));

			if($stat) $out =  "ok $srv"; else $out =  "send mail failure from $srv";
			break;
		}
	case 'xml':
	case 'do': {
		list ($sig,$xml) = bx($mckey);
		$gmt = gmstrftime("%b %d %Y %H:%M:%S");
		$uri = htmlspecialchars($_SERVER["REQUEST_METHOD"].' '.$_SERVER ['REQUEST_URI']);
		$aout ="<details>processed by ".$_SERVER['HTTP_HOST'].' '.$_SERVER['SERVER_ADDR'].':'.
		$_SERVER['SERVER_PORT']." $gmt GMT</details>";
		$aout.= "<requesturi>\n".$uri."</requesturi>\n";
		$out = <<<XXX
<bxreturn>
    $aout
	<sig>$sig</sig>
	<bx>$xml</bx>
	<bxstatus>success</bxstatus>
</bxreturn>
XXX;
		if ($c=='xml') header ("Content-type: text/xml"); else
		header ("Content-type: application/x-text");
		break;
	}




	default: break;
}

echo $out;
?>
