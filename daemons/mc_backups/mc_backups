#!/bin/sh

# mc_backups      Start/Stop the MedCommons backup utility
#
# chkconfig: 2345 90 60
# description: mc_backups pulls documents from a gateway using CXP, then
#              puts the compressed/encrypted document onto Amazon's S3
#
# processname: mc_backups
# pidfile: /var/run/mc_backups.pid
#
# Source function library.
. /etc/init.d/functions

prog="mc_backups"

start() {
	echo -n $"Starting $prog: "
	if [ -e /var/run/mc_backups.pid ] && [ -e /proc/`cat /var/run/mc_backups.pid` ]; then
		echo -n $"Cannot start mc_backups: mc_backups is already running."
		failure $"cannot start mc_backups: mc_backups already running."
		echo
		return 1
	fi
	mkdir -p /tmp/mc_backups
	chown mc_backups:mc_backups /tmp/mc_backups
	(cd /tmp/mc_backups; HOME=/opt/mc_backups daemon /usr/bin/python /opt/mc_backups/mc_backups.py -C /opt/mc_backups/mc_backups.rc)
	RETVAL=$?
	echo
	return $RETVAL
}

stop() {
	echo -n $"Stopping $prog: "
	if [ ! -e /var/run/mc_backups.pid ] || [ ! -e /proc/`cat /var/run/mc_backups.pid` ]; then
		echo -n $"cannot stop mc_backups: mc_backups is not running.";
		failure $"cannot stop mc_backups: mc_backups is not running."
		echo
		return 1;
	fi
	killproc mc_backups
	RETVAL=$?
	echo
	return $RETVAL
}

rhstatus() {
	status mc_backups
}

restart() {
	stop
	start
}

case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart)
	restart
	;;
  reload)
	restart
	;;
  status)
	rhstatus
	;;
  *)
	echo $"Usage: $0 {start|stop|status|reload|restart}"
	exit 
esac
