<?
/*
 * This page renders a fax cover sheet that when sent will cause the 
 * fax to get added to the specified user's account.
 *
 * @param accid              - account id to create fax cover sheet for
 * @param coverNotifyEmail   - email address to notify when fax received
 * @param coverPin           - pin to set on tracking number generated by 
 *                             inbound fax (opt)
 * @param coverProviderCode  - code to identify provider (opt, deprecated)
 * @param no_cover_letter    - set to true to suppress cover letter (opt)
 * @param note               - note to add to printed cover sheet (opt)
 * @param title              - title to give document created by inbound fax (opt)
 */
require_once "urls.inc.php";
require_once 'settings.php';
require_once "utils.inc.php";
require_once "alib.inc.php";
require_once 'mc.inc.php';
require_once 'login.inc.php';
require_once 'template.inc.php';

nocache();

class ValidationFailure extends Exception {
  function __construct($msg) {
    $this->message = $msg;
  }
}

function encode_fax($mcid, $n) {
  $binary = pack('NNN',
    intval(substr($mcid, 0, 8), 10),
    intval(substr($mcid, 8, 8), 10),
    $n);

  // Use 'url-safe' base64 encoding, cuz + and / interfere with URL encoding
  return str_replace(array('+', '/'), array('-', '_'),
		     base64_encode($binary));
}

try {
    // Get basic user info
    $accid = clean_mcid(req('accid'));
    $u = User::load($accid);
    if(!$u)
      throw new Exception("Invalid user account $accid specified");

    $no_cover_letter = req('no_cover_letter');
    $prettyAccid = pretty_mcid($accid);
    $note = req('note');

    $coverPin = req('coverPin');
    $coverProviderCode = req('coverProviderCode');

    if($coverPin == '')
      $coverPin = null;

    if($coverPin) {
      if(preg_match("/[0-9]{5}/",$coverPin) !== 1)
        throw new ValidationFailure("Invalid PIN specified:  PIN must be exactly 5 digits.");
      $encryptedPin = sha1($coverPin);
    }
    else
      $encryptedPin = null;

    $createCover = req('createCover',true);
    if($createCover) {
      if($coverPin=="") {
        $coverPin = null;
      }
    }

    $coverNotifyEmail  = req('coverNotifyEmail');
    if($coverNotifyEmail === '')
      $coverNotifyEmail = null;

    $title = req('title');

    // Add row to fax cover table
    $coverId = pdo_execute("insert into cover (cover_id, cover_account_id, cover_notification, cover_encrypted_pin, cover_provider_code, cover_title, cover_note, cover_pin)
                              values (NULL, ?, ?, ?, ?,?,?,?)", array($accid,$coverNotifyEmail,$encryptedPin,$coverProviderCode,$title,$note,$coverPin));

    // Calculate the bar code url
    $barcode=encode_fax($accid, $coverId);

    $barImgUrl="https://secureservices.dataoncall.com/CreateBarCode.serv?BARCODE=$barcode&CODE_TYPE=DATAMATRIX&DM_DOT_PIXELS=8";

    // Change the default cover sheet template based on whether they are
    // enabled for Simtrak or not - this is a hack!
    $defaultCover = "cover.tpl.php";
    $info = get_account_info();
    if($info) {
      $loggedInUser = User::load($info->accid);
      if($loggedInUser->hasSimtrak)
        $defaultCover = "simtrak_cover.tpl.php";
    }

    $templateName = req('templateName',$defaultCover);

    echo template($templateName)
      ->set("coverNotifyEmail",$coverNotifyEmail)
      ->set("createCover",$createCover)
      ->set("coverPin",$coverPin)
      ->set("coverProviderCode",$coverProviderCode)
      ->set("prettyAccid",$prettyAccid)
      ->set("acLogo",$acLogo)
      ->set("acDomain",$acDomain)
      ->set("accid",$accid)
      ->set("u",$u)
      ->set("barImgUrl",$barImgUrl)
      ->set("coverId",$coverId)
      ->set("note",$note)
      ->set("no_cover_letter",$no_cover_letter)
      ->fetch();
}
catch(ValidationFailure $e) {
    error_page($e->getMessage(), $e->getMessage());
}
catch(Exception $e) {
    error_page("A system error occurred while creating your cover sheet.", $e->getMessage());
}
?>
