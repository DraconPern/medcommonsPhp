/***

    MochiKit.MochiKit 1.4 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=(MochiKit.__compat__||(typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined"));
}
MochiKit.Base.VERSION="1.4";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_1,_2){
if(_1===null||_1===undefined){
_1={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_1[k]=o[k];
}
}
}
return _1;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},camelize:function(_6){
var _7=_6.split("-");
var cc=_7[0];
for(var i=1;i<_7.length;i++){
cc+=_7[i].charAt(0).toUpperCase()+_7[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(_b){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=_b;
return new me();
}
},_flattenArray:function(_d,_e){
for(var i=0;i<_e.length;i++){
var o=_e[i];
if(o instanceof Array){
arguments.callee(_d,o);
}else{
_d.push(o);
}
}
return _d;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _15=m.extend(null,arguments);
while(_15.length){
var o=_15.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_15.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_18,obj,_1a){
if(!_1a){
_1a=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_18){
_18=[];
}
for(var i=_1a;i<l;i++){
_18.push(obj[i]);
}
}
return _18;
},updatetree:function(_1d,obj){
if(_1d===null||_1d===undefined){
_1d={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_1d[k])=="object"&&typeof (v)=="object"){
arguments.callee(_1d[k],v);
}else{
_1d[k]=v;
}
}
}
}
return _1d;
},setdefault:function(_23,obj){
if(_23===null||_23===undefined){
_23={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _23)){
_23[k]=o[k];
}
}
}
return _23;
},keys:function(obj){
var _29=[];
for(var _2a in obj){
_29.push(_2a);
}
return _29;
},values:function(obj){
var _2c=[];
for(var _2d in obj){
_2c.push(obj[_2d]);
}
return _2c;
},items:function(obj){
var _2f=[];
var e;
for(var _31 in obj){
var v;
try{
v=obj[_31];
}
catch(e){
continue;
}
_2f.push([_31,v]);
}
return _2f;
},_newNamedError:function(_33,_34,_35){
_35.prototype=new MochiKit.Base.NamedError(_33.NAME+"."+_34);
_33[_34]=_35;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_73){
return function(){
return this[_73].apply(this,arguments);
};
},itemgetter:function(_74){
return function(arg){
return arg[_74];
};
},typeMatcher:function(){
var _76={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_76[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _76)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _87=[];
for(var i=1;i<arguments.length;i++){
_87.push(fn(arguments[i]));
}
return _87;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _8d=m.isArrayLike;
if(arguments.length<=2){
if(!_8d(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _8e=[];
for(var i=0;i<lst.length;i++){
_8e.push(fn(lst[i]));
}
return _8e;
}else{
if(fn===null){
fn=Array;
}
var _90=null;
for(i=1;i<arguments.length;i++){
if(!_8d(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_90===null||_90>l){
_90=l;
}
}
_8e=[];
for(i=0;i<_90;i++){
var _92=[];
for(var j=1;j<arguments.length;j++){
_92.push(arguments[j][i]);
}
_8e.push(fn.apply(this,_92));
}
return _8e;
}
},xfilter:function(fn){
var _95=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_95.push(o);
}
}
return _95;
},filter:function(fn,lst,_9a){
var _9b=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_9a);
}else{
if(typeof (_9a)=="undefined"||_9a===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_9b.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_9a,o)){
_9b.push(o);
}
}
}
}
return _9b;
},_wrapDumbFunction:function(_9f){
return function(){
switch(arguments.length){
case 0:
return _9f();
case 1:
return _9f(arguments[0]);
case 2:
return _9f(arguments[0],arguments[1]);
case 3:
return _9f(arguments[0],arguments[1],arguments[2]);
}
var _a0=[];
for(var i=0;i<arguments.length;i++){
_a0.push("arguments["+i+"]");
}
return eval("(func("+_a0.join(",")+"))");
};
},methodcaller:function(_a2){
var _a3=MochiKit.Base.extend(null,arguments,1);
if(typeof (_a2)=="function"){
return function(obj){
return _a2.apply(obj,_a3);
};
}else{
return function(obj){
return obj[_a2].apply(obj,_a3);
};
}
},method:function(_a6,_a7){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_a7,_a6],arguments,2));
},compose:function(f1,f2){
var _ab=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_ab.push(fn);
}
return function(){
var _af=arguments;
for(var i=_ab.length-1;i>=0;i--){
_af=[_ab[i].apply(this,_af)];
}
return _af[0];
};
},bind:function(_b1,_b2){
if(typeof (_b1)=="string"){
_b1=_b2[_b1];
}
var _b3=_b1.im_func;
var _b4=_b1.im_preargs;
var _b5=_b1.im_self;
var m=MochiKit.Base;
if(typeof (_b1)=="function"&&typeof (_b1.apply)=="undefined"){
_b1=m._wrapDumbFunction(_b1);
}
if(typeof (_b3)!="function"){
_b3=_b1;
}
if(typeof (_b2)!="undefined"){
_b5=_b2;
}
if(typeof (_b4)=="undefined"){
_b4=[];
}else{
_b4=_b4.slice();
}
m.extend(_b4,arguments,2);
var _b7=function(){
var _b8=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_b8=m.concat(me.im_preargs,_b8);
}
var _ba=me.im_self;
if(!_ba){
_ba=this;
}
return me.im_func.apply(_ba,_b8);
};
_b7.im_self=_b5;
_b7.im_func=_b3;
_b7.im_preargs=_b4;
return _b7;
},bindMethods:function(_bb){
var _bc=MochiKit.Base.bind;
for(var k in _bb){
var _be=_bb[k];
if(typeof (_be)=="function"){
_bb[k]=_bc(_be,_bb);
}
}
},registerComparator:function(_bf,_c0,_c1,_c2){
MochiKit.Base.comparatorRegistry.register(_bf,_c0,_c1,_c2);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _c5=(typeof (a)=="undefined"||a===null);
var _c6=(typeof (b)=="undefined"||b===null);
if(_c5&&_c6){
return 0;
}else{
if(_c5){
return -1;
}else{
if(_c6){
return 1;
}
}
}
var m=MochiKit.Base;
var _c8=m._primitives;
if(!(typeof (a) in _c8&&typeof (b) in _c8)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _c9=m.repr;
throw new TypeError(_c9(a)+" and "+_c9(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _ce=MochiKit.Base.compare;
var _cf=a.length;
var _d0=0;
if(_cf>b.length){
_d0=1;
_cf=b.length;
}else{
if(_cf<b.length){
_d0=-1;
}
}
for(var i=0;i<_cf;i++){
var cmp=_ce(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _d0;
},registerRepr:function(_d3,_d4,_d5,_d6){
MochiKit.Base.reprRegistry.register(_d3,_d4,_d5,_d6);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _d8=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_d8=_d8.replace(/^\s+/,"").replace(/\s+/g," ");
var idx=_d8.indexOf("{");
if(idx!=-1){
_d8=_d8.substr(0,idx)+"{...}";
}
}
return _d8;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_de,_df,_e0,_e1){
MochiKit.Base.jsonRegistry.register(_de,_df,_e0,_e1);
},evalJSON:function(){
return eval("("+MochiKit.Base._filterJSON(arguments[0])+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
if(m){
return m[1];
}
return s;
},serializeJSON:function(o){
var _e5=typeof (o);
if(_e5=="number"||_e5=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
var m=MochiKit.Base;
var _e7=m.reprString;
if(_e5=="string"){
return _e7(o);
}
var me=arguments.callee;
var _e9;
if(typeof (o.__json__)=="function"){
_e9=o.__json__();
if(o!==_e9){
return me(_e9);
}
}
if(typeof (o.json)=="function"){
_e9=o.json();
if(o!==_e9){
return me(_e9);
}
}
if(_e5!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
try{
_e9=m.jsonRegistry.match(o);
if(o!==_e9){
return me(_e9);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_e5=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_e5=="function"){
return null;
}
res=[];
for(var k in o){
var _ee;
if(typeof (k)=="number"){
_ee="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_ee=_e7(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_ee+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_f1,arr){
if(_f1.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_f1,arr)===0);
},concat:function(){
var _f3=[];
var _f4=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_f4(_f3,arguments[i]);
}
return _f3;
},keyComparator:function(key){
var m=MochiKit.Base;
var _f8=m.compare;
if(arguments.length==1){
return function(a,b){
return _f8(a[key],b[key]);
};
}
var _fb=m.extend(null,arguments);
return function(a,b){
var _fe=0;
for(var i=0;(_fe===0)&&(i<_fb.length);i++){
var key=_fb[i];
_fe=_f8(a[key],b[key]);
}
return _fe;
};
},reverseKeyComparator:function(key){
var _102=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _102(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_107,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _10a=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_10a(o,cur)==_107){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_10e,_10f,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_10f)=="undefined"||_10f===null){
_10f=0;
}
for(var i=_10f;i<end;i++){
if(lst[i]===_10e){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _115=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_115+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_115<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_115;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(compare);
if(data.length%2==0){
var _119=data.length/2;
return (data[_119]+data[_119-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_11b,_11c,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_11c)=="undefined"||_11c===null){
_11c=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_11c;i<end;i++){
if(cmp(lst[i],_11b)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_121){
var _122=[node];
var _123=MochiKit.Base.extend;
while(_122.length){
var res=_121(_122.shift());
if(res){
_123(_122,res);
}
}
},nameFunctions:function(_125){
var base=_125.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _125){
var o=_125[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_129,_12a){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_129)=="string"||(typeof (_129.nodeType)!="undefined"&&_129.nodeType>0))){
var kv=MochiKit.DOM.formContents(_129);
_129=kv[0];
_12a=kv[1];
}else{
if(arguments.length==1){
if(typeof (_129.length)=="number"&&_129.length==2){
return arguments.callee(_129[0],_129[1]);
}
var o=_129;
_129=[];
_12a=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_129.push(k);
_12a.push(v[i]);
}
}else{
_129.push(k);
_12a.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_129.length,_12a.length);
var _132=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_12a[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_132(_129[i])+"="+_132(v));
}
}
return rval.join("&");
},parseQueryString:function(_133,_134){
var qstr=(_133.charAt(0)=="?")?_133.substring(1):_133;
var _136=qstr.replace(/\+/g,"%20").split(/(\&amp\;|\&\#38\;|\&#x26;|\&)/);
var o={};
var _138;
if(typeof (decodeURIComponent)!="undefined"){
_138=decodeURIComponent;
}else{
_138=unescape;
}
if(_134){
for(var i=0;i<_136.length;i++){
var pair=_136[i].split("=");
var name=_138(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_138(pair.join("=")));
}
}else{
for(i=0;i<_136.length;i++){
pair=_136[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_138(name)]=_138(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_13e,wrap,_140){
if(_140){
this.pairs.unshift([name,_13e,wrap]);
}else{
this.pairs.push([name,_13e,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["flattenArray","noop","camelize","counter","clone","extend","update","updatetree","setdefault","keys","values","items","NamedError","operator","forwardCall","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isEmpty","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","methodcaller","compose","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString","findValue","findIdentical","flattenArguments","method","average","mean","median"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_146,_147){
if(!MochiKit.__export__){
return;
}
var all=_147.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_146[all[i]]=_147[all[i]];
}
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m.forward=m.forwardCall;
m.find=m.findValue;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_14b){
return encodeURIComponent(_14b).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_14c){
return escape(_14c).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
mean=MochiKit.Base.mean;
median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Iter");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Iter depends on MochiKit.Base!";
}
if(typeof (MochiKit.Iter)=="undefined"){
MochiKit.Iter={};
}
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.4";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_150,_151,_152){
MochiKit.Iter.iteratorRegistry.register(name,_150,_151,_152);
},iter:function(_153,_154){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_154;
},_153);
}
if(typeof (_153.next)=="function"){
return _153;
}else{
if(typeof (_153.iter)=="function"){
return _153.iter();
}
}
try{
return self.iteratorRegistry.match(_153);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_153)+": "+m.repr(_153)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _15e=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_15e.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_164){
return _164.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _16a=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_16a);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _176=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_176=arguments[1];
stop=arguments[2];
}else{
_176=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_176,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_176){
rval=seq.next();
i++;
}
if(_176>=stop){
throw self.StopIteration;
}
_176+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _180=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_180));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _18b=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_18b.length>1){
try{
return _18b[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_18b.shift();
}
}
if(_18b.length==1){
var arg=_18b.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_196,sync,_198){
sync.pos[_196]=-1;
var m=MochiKit.Base;
var _19a=m.listMin;
return {repr:function(){
return "tee("+_196+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_196];
if(i==sync.max){
rval=_198.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_196]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_196]+=1;
if(i==sync.min&&_19a(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_19d,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_19d=self.iter(_19d);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_19d));
}
return rval;
},list:function(_1a4){
var rval;
if(_1a4 instanceof Array){
return _1a4.slice();
}
if(typeof (_1a4)=="function"&&!(_1a4 instanceof Function)&&typeof (_1a4.length)=="number"){
rval=[];
for(var i=0;i<_1a4.length;i++){
rval.push(_1a4[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1a4=self.iter(_1a4);
var rval=[];
try{
while(true){
rval.push(_1a4.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1a9,_1aa){
var i=0;
var x=_1aa;
var self=MochiKit.Iter;
_1a9=self.iter(_1a9);
if(arguments.length<3){
try{
x=_1a9.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_1a9.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1ae=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1ae=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1ae=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1ae>=stop)||(step<0&&_1ae<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1ae;
_1ae+=step;
return rval;
},repr:function(){
return "range("+[_1ae,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_1b2,_1b3){
if(typeof (_1b3)=="undefined"||_1b3===null){
_1b3=0;
}
var x=_1b3;
var self=MochiKit.Iter;
_1b2=self.iter(_1b2);
try{
while(true){
x+=_1b2.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_1b6){
var self=MochiKit.Iter;
_1b6=self.iter(_1b6);
try{
while(true){
_1b6.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_1b8,func,self){
var m=MochiKit.Base;
if(arguments.length>2){
func=m.bind(func,self);
}
if(m.isArrayLike(_1b8)){
try{
for(var i=0;i<_1b8.length;i++){
func(_1b8[i]);
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
}else{
self=MochiKit.Iter;
self.exhaust(self.imap(func,_1b8));
}
},every:function(_1bd,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_1bd).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_1c0,cmp){
var rval=MochiKit.Iter.list(_1c0);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_1c3){
var rval=MochiKit.Iter.list(_1c3);
rval.reverse();
return rval;
},some:function(_1c5,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_1c5).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_1c9){
if(MochiKit.Base.isArrayLike(_1c9)){
for(var i=0;i<_1c9.length;i++){
lst.push(_1c9[i]);
}
}else{
var self=MochiKit.Iter;
_1c9=self.iter(_1c9);
try{
while(true){
lst.push(_1c9.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_1cc,_1cd){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1cd=m.operator.identity;
}
_1cc=self.iter(_1cc);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_1cc.next();
k=_1cd(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _1d4=true;
var _1d5=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_1d5(k,pk)===0){
fetch();
if(_1d4){
_1d4=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_1d5(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_1d6,_1d7){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1d7=m.operator.identity;
}
_1d6=self.iter(_1d6);
var _1da=[];
var _1db=true;
var _1dc;
var _1dd=m.compare;
while(true){
try{
var _1de=_1d6.next();
var key=_1d7(_1de);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_1db||_1dd(key,_1dc)!==0){
var _1e0=[];
_1da.push([key,_1e0]);
}
_1e0.push(_1de);
_1db=false;
_1dc=key;
}
return _1da;
},arrayLikeIter:function(_1e1){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_1e1.length){
throw MochiKit.Iter.StopIteration;
}
return _1e1[i++];
}};
},hasIterateNext:function(_1e3){
return (_1e3&&typeof (_1e3.iterateNext)=="function");
},iterateNextIter:function(_1e4){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_1e4.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter","hasIterateNext","iterateNextIter"];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend","groupby","groupby_as_array"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DOM");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.DOM depends on MochiKit.Base!";
}
if(typeof (MochiKit.DOM)=="undefined"){
MochiKit.DOM={};
}
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.4";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["removeEmptyTextNodes","formContents","currentWindow","currentDocument","withWindow","withDocument","registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","isChildNode","getNodeAttribute","removeNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","insertSiblingNodesAfter","insertSiblingNodesBefore","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","CANVAS","HR","LABEL","TEXTAREA","FORM","STRONG","SELECT","OPTION","OPTGROUP","LEGEND","FIELDSET","P","UL","OL","LI","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","scrapeText","isParent","getFirstParentByTagAndClassName","makeClipping","undoClipping","makePositioned","undoPositioned","getFirstElementByTagAndClassName"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.DEPRECATED=[["computedStyle","MochiKit.Style.getStyle","1.4"],["elementDimensions","MochiKit.Style.getElementDimensions","1.4"],["elementPosition","MochiKit.Style.getElementPosition","1.4"],["hideElement","MochiKit.Style.hideElement","1.4"],["setElementDimensions","MochiKit.Style.setElementDimensions","1.4"],["setElementPosition","MochiKit.Style.setElementPosition","1.4"],["setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4"],["setOpacity","MochiKit.Style.setOpacity","1.4"],["showElement","MochiKit.Style.showElement","1.4"],["Coordinates","MochiKit.Style.Coordinates","1.4"],["Dimensions","MochiKit.Style.Dimensions","1.4"]];
MochiKit.DOM.getViewportDimensions=new Function(""+"if (!MochiKit[\"Style\"]) {"+"    throw new Error(\"This function has been deprecated and depends on MochiKit.Style.\");"+"}"+"return MochiKit.Style.getViewportDimensions.apply(this, arguments);");
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _1ea=self._document;
var _1eb=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_1eb;
self._document=_1ea;
throw e;
}
self._window=_1eb;
self._document=_1ea;
return rval;
},formContents:function(elem){
var _1ee=[];
var _1ef=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _1f4=elem.tagName.toUpperCase();
if(_1f4==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_1f4==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_1ee.push(name);
_1ef.push(v);
return null;
}
_1ee.push(name);
_1ef.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_1ee.push(name);
_1ef.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_1ee.push(name);
_1ef.push(v);
}
return null;
}
}
if(_1f4==="FORM"||_1f4==="P"||_1f4==="SPAN"||_1f4==="DIV"){
return elem.childNodes;
}
_1ee.push(name);
_1ef.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_1ee,_1ef];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _1fd=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_1fd;
throw e;
}
self._document=_1fd;
return rval;
},registerDOMConverter:function(name,_200,wrap,_202){
MochiKit.DOM.domConverters.register(name,_200,wrap,_202);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _209=im.repeat;
var map=m.map;
}
var _20b=self.domConverters;
var _20c=arguments.callee;
var _20d=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im.list(node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _20e=null;
try{
_20e=iter(node);
}
catch(e){
}
if(_20e){
return map(_20c,_20e,_209(ctx));
}
}
try{
node=_20b.match(node,ctx);
continue;
}
catch(e){
if(e!=_20d){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_210){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_210)=="string"){
_210=self.getElement(_210);
}
if(typeof (node)=="undefined"||node===null||node===self._document){
return false;
}
do{
if(node===_210){
return true;
}
var _212=node.tagName;
node=node.parentNode;
if(!_212){
break;
}
_212=_212.toUpperCase();
}while(_212!="BODY"&&_212!="HTML");
return false;
},setNodeAttribute:function(node,attr,_215){
var o={};
o[attr]=_215;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _21a=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_21a){
return node[_21a];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _21e=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_21e){
return node[_21e];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_220){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_220){
var _223=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _220){
var v=_220[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_223(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _226=self.attributeArray.renames;
for(var k in _220){
v=_220[k];
var _227=_226[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_227)=="string"){
elem[_227]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_223(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _22b=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _22c=MochiKit.Base.concat;
while(_22b.length){
var n=_22b.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_22b=_22c(n,_22b);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _231=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _232=elem.parentNode;
var _233=MochiKit.Base.concat;
while(_231.length){
var n=_231.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_232.insertBefore(n,elem);
}else{
_231=_233(n,_231);
}
}
}
return _232;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _238=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_238);
}else{
return self.appendChildNodes(elem.parentNode,_238);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _23c;
while((_23c=elem.firstChild)){
elem.removeChild(_23c);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_23e){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_23e)=="string"||typeof (_23e)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _243=self._xhtml;
if(_23e&&!self.attributeArray.compliant){
var _244="";
if("name" in _23e){
_244+=" name=\""+self.escapeHTML(_23e.name)+"\"";
}
if(name=="input"&&"type" in _23e){
_244+=" type=\""+self.escapeHTML(_23e.type)+"\"";
}
if(_244){
name="<"+name+_244+">";
_243=false;
}
}
var d=self._document;
if(_243&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_23e){
self.updateNodeAttributes(elem,_23e);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var e=MochiKit.DOM.getElement(elem);
e.parentNode.removeChild(e);
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _24c=dest.parentNode;
if(src){
src=self.getElement(src);
_24c.replaceChild(src,dest);
}else{
_24c.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_24f,_250,_251){
var self=MochiKit.DOM;
if(typeof (_24f)=="undefined"||_24f===null){
_24f="*";
}
if(typeof (_251)=="undefined"||_251===null){
_251=self._document;
}
_251=self.getElement(_251);
var _253=(_251.getElementsByTagName(_24f)||self._document.all);
if(typeof (_250)=="undefined"||_250===null){
return MochiKit.Base.extend(null,_253);
}
var _254=[];
for(var i=0;i<_253.length;i++){
var _256=_253[i];
var cls=_256.className;
if(!cls){
continue;
}
var _258=cls.split(" ");
for(var j=0;j<_258.length;j++){
if(_258[j]==_250){
_254.push(_256);
break;
}
}
}
return _254;
},_newCallStack:function(path,once){
var rval=function(){
var _25d=arguments.callee.callStack;
for(var i=0;i<_25d.length;i++){
if(_25d[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_25f,path,func,once){
var self=MochiKit.DOM;
var _264=_25f[path];
var _265=_264;
if(!(typeof (_264)=="function"&&typeof (_264.callStack)=="object"&&_264.callStack!==null)){
_265=self._newCallStack(path,once);
if(typeof (_264)=="function"){
_265.callStack.push(_264);
}
_25f[path]=_265;
}
_265.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_268){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_268=self.getElement(_268);
if(_268){
_268.focus();
}
});
},setElementClass:function(_26a,_26b){
var self=MochiKit.DOM;
var obj=self.getElement(_26a);
if(self.attributeArray.compliant){
obj.setAttribute("class",_26b);
}else{
obj.setAttribute("className",_26b);
}
},toggleElementClass:function(_26e){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_26e)){
self.removeElementClass(obj,_26e);
}
}
},addElementClass:function(_272,_273){
var self=MochiKit.DOM;
var obj=self.getElement(_272);
var cls=obj.className;
if(cls==undefined||cls.length===0){
self.setElementClass(obj,_273);
return true;
}
if(cls==_273){
return false;
}
var _277=cls.split(" ");
for(var i=0;i<_277.length;i++){
if(_277[i]==_273){
return false;
}
}
self.setElementClass(obj,cls+" "+_273);
return true;
},removeElementClass:function(_279,_27a){
var self=MochiKit.DOM;
var obj=self.getElement(_279);
var cls=obj.className;
if(cls==undefined||cls.length===0){
return false;
}
if(cls==_27a){
self.setElementClass(obj,"");
return true;
}
var _27e=cls.split(" ");
for(var i=0;i<_27e.length;i++){
if(_27e[i]==_27a){
_27e.splice(i,1);
self.setElementClass(obj,_27e.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_280,_281,_282){
var obj=MochiKit.DOM.getElement(_280);
var res=MochiKit.DOM.removeElementClass(obj,_281);
if(res){
MochiKit.DOM.addElementClass(obj,_282);
}
return res;
},hasElementClass:function(_285,_286){
var obj=MochiKit.DOM.getElement(_285);
var cls=obj.className;
if(!cls){
return false;
}
var _289=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_289.length;j++){
if(_289[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _291=[dom];
var self=MochiKit.DOM;
var _293=self.escapeHTML;
var _294=self.attributeArray;
while(_291.length){
dom=_291.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _295=[];
var _296=_294(dom);
for(var i=0;i<_296.length;i++){
var a=_296[i];
_295.push([" ",a.name,"=\"",_293(a.value),"\""]);
}
_295.sort();
for(i=0;i<_295.length;i++){
var _299=_295[i];
for(var j=0;j<_299.length;j++){
lst.push(_299[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_291.push("</"+dom.tagName.toLowerCase()+">");
var _29b=dom.childNodes;
for(i=_29b.length-1;i>=0;i--){
_291.push(_29b[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_293(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_29d){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _2a2=node.nodeValue;
if(typeof (_2a2)=="string"){
rval.push(_2a2);
}
})(MochiKit.DOM.getElement(node));
if(_29d){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_2a3){
_2a3=MochiKit.DOM.getElement(_2a3);
for(var i=0;i<_2a3.childNodes.length;i++){
var node=_2a3.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},makeClipping:function(_2a6){
_2a6=MochiKit.DOM.getElement(_2a6);
var _2a7=_2a6.style.overflow;
if((MochiKit.Style.getStyle(_2a6,"overflow")||"visible")!="hidden"){
_2a6.style.overflow="hidden";
}
return _2a7;
},undoClipping:function(_2a8,_2a9){
_2a8=MochiKit.DOM.getElement(_2a8);
if(!_2a9){
return;
}
_2a8.style.overflow=_2a9;
},makePositioned:function(_2aa){
_2aa=MochiKit.DOM.getElement(_2aa);
var pos=MochiKit.Style.getStyle(_2aa,"position");
if(pos=="static"||!pos){
_2aa.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_2aa.style.top=0;
_2aa.style.left=0;
}
}
},undoPositioned:function(_2ac){
_2ac=MochiKit.DOM.getElement(_2ac);
if(_2ac.style.position=="relative"){
_2ac.style.position=_2ac.style.top=_2ac.style.left=_2ac.style.bottom=_2ac.style.right="";
}
},getFirstElementByTagAndClassName:function(_2ad,_2ae,_2af){
var self=MochiKit.DOM;
if(typeof (_2ad)=="undefined"||_2ad===null){
_2ad="*";
}
if(typeof (_2af)=="undefined"||_2af===null){
_2af=self._document;
}
_2af=self.getElement(_2af);
var _2b1=(_2af.getElementsByTagName(_2ad)||self._document.all);
if(typeof (_2ae)=="undefined"||_2ae===null){
return _2b1[0];
}
for(var i=0;i<_2b1.length;i++){
var _2b3=_2b1[i];
var _2b4=_2b3.className.split(" ");
for(var j=0;j<_2b4.length;j++){
if(_2b4[j]==_2ae){
return _2b3;
}
}
}
},getFirstParentByTagAndClassName:function(elem,_2b7,_2b8){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_2b7)=="undefined"||_2b7===null){
_2b7="*";
}else{
_2b7=_2b7.toUpperCase();
}
if(typeof (_2b8)=="undefined"||_2b8===null){
_2b8=null;
}
var _2ba="";
var _2bb="";
while(elem&&elem.tagName){
elem=elem.parentNode;
if(_2b7=="*"&&_2b8===null){
return elem;
}
_2ba=elem.className.split(" ");
_2bb=elem.tagName.toUpperCase();
if(_2b8===null&&_2b7==_2bb){
return elem;
}else{
if(_2b8!==null){
for(var i=0;i<_2ba.length;i++){
if(_2b7=="*"&&_2ba[i]==_2b8){
return elem;
}else{
if(_2b7==_2bb&&_2ba[i]==_2b8){
return elem;
}
}
}
}
}
}
return elem;
},isParent:function(_2bd,_2be){
if(!_2bd.parentNode||_2bd==_2be){
return false;
}
if(_2bd.parentNode==_2be){
return true;
}
return MochiKit.DOM.isParent(_2bd.parentNode,_2be);
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _2c1="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_2c1);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _2c2=this._document.createElement("span");
var _2c3;
if(_2c2&&_2c2.attributes&&_2c2.attributes.length>0){
var _2c4=m.filter;
_2c3=function(node){
return _2c4(_2c3.ignoreAttrFilter,node.attributes);
};
_2c3.ignoreAttr={};
var _2c6=_2c2.attributes;
var _2c7=_2c3.ignoreAttr;
for(var i=0;i<_2c6.length;i++){
var a=_2c6[i];
_2c7[a.name]=a.value;
}
_2c3.ignoreAttrFilter=function(a){
return (_2c3.ignoreAttr[a.name]!=a.value);
};
_2c3.compliant=false;
_2c3.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_2c3=function(node){
return node.attributes;
};
_2c3.compliant=true;
_2c3.renames={};
}
this.attributeArray=_2c3;
var _2cc=function(_2cd,arr){
var _2cf=arr[1].split(".");
var str="";
var obj={};
str+="if (!MochiKit."+_2cf[1]+") { throw new Error(\"";
str+="This function has been deprecated and depends on MochiKit.";
str+=_2cf[1]+".\");}";
str+="return MochiKit."+_2cf[1]+"."+arr[0];
str+=".apply(this, arguments);";
obj[_2cf[2]]=new Function(str);
MochiKit.Base.update(MochiKit[_2cd],obj);
};
for(var i;i<MochiKit.DOM.DEPRECATED.length;i++){
_2cc("DOM",MochiKit.DOM.DEPRECATED[i]);
}
var _2d2=this.createDOMFunc;
this.UL=_2d2("ul");
this.OL=_2d2("ol");
this.LI=_2d2("li");
this.TD=_2d2("td");
this.TR=_2d2("tr");
this.TBODY=_2d2("tbody");
this.THEAD=_2d2("thead");
this.TFOOT=_2d2("tfoot");
this.TABLE=_2d2("table");
this.TH=_2d2("th");
this.INPUT=_2d2("input");
this.SPAN=_2d2("span");
this.A=_2d2("a");
this.DIV=_2d2("div");
this.IMG=_2d2("img");
this.BUTTON=_2d2("button");
this.TT=_2d2("tt");
this.PRE=_2d2("pre");
this.H1=_2d2("h1");
this.H2=_2d2("h2");
this.H3=_2d2("h3");
this.BR=_2d2("br");
this.HR=_2d2("hr");
this.LABEL=_2d2("label");
this.TEXTAREA=_2d2("textarea");
this.FORM=_2d2("form");
this.P=_2d2("p");
this.SELECT=_2d2("select");
this.OPTION=_2d2("option");
this.OPTGROUP=_2d2("optgroup");
this.LEGEND=_2d2("legend");
this.FIELDSET=_2d2("fieldset");
this.STRONG=_2d2("strong");
this.CANVAS=_2d2("canvas");
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Style");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.DOM!";
}
if(typeof (MochiKit.Style)=="undefined"){
MochiKit.Style={};
}
MochiKit.Style.NAME="MochiKit.Style";
MochiKit.Style.VERSION="1.4";
MochiKit.Style.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Style.toString=function(){
return this.__repr__();
};
MochiKit.Style.EXPORT_OK=[];
MochiKit.Style.EXPORT=["setStyle","setOpacity","getStyle","getElementDimensions","elementDimensions","setElementDimensions","getElementPosition","elementPosition","setElementPosition","setDisplayForElement","hideElement","showElement","getViewportDimensions","getViewportPosition","Dimensions","Coordinates"];
MochiKit.Style.Dimensions=function(w,h){
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_2da){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_2da=MochiKit.Base.camelize(_2da);
if(!elem||elem==d){
return undefined;
}
if(_2da=="opacity"&&elem.filters){
var _2dd=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_2dd&&_2dd[1]){
return parseFloat(_2dd[1])/100;
}
return 1;
}
var _2de=elem.style?elem.style[_2da]:null;
if(!_2de){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_2da=_2da.replace(/([A-Z])/g,"-$1").toLowerCase();
_2de=css?css.getPropertyValue(_2da):null;
}else{
if(elem.currentStyle){
_2de=elem.currentStyle[_2da];
}
}
}
if(_2da=="opacity"){
_2de=parseFloat(_2de);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.find(["left","top","right","bottom"],_2da)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_2de="auto";
}
}
return _2de=="auto"?null:_2de;
},setStyle:function(elem,_2e1){
elem=MochiKit.DOM.getElement(elem);
for(var name in _2e1){
if(name=="opacity"){
MochiKit.Style.setOpacity(elem,_2e1[name]);
}else{
elem.style[MochiKit.Base.camelize(name)]=_2e1[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _2e6=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_2e6?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_2e8){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem||(!(elem.x&&elem.y)&&(!elem.parentNode===null||self.getStyle(elem,"display")=="none"))){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _2ed=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_2ed=elem.offsetParent;
if(_2ed!=elem){
while(_2ed){
c.x+=_2ed.offsetLeft;
c.y+=_2ed.offsetTop;
_2ed=_2ed.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
}
}
}
if(typeof (_2e8)!="undefined"){
_2e8=arguments.callee(_2e8);
if(_2e8){
c.x-=(_2e8.x||0);
c.y-=(_2e8.y||0);
}
}
if(elem.parentNode){
_2ed=elem.parentNode;
}else{
_2ed=null;
}
while(_2ed){
var _2f2=_2ed.tagName.toUpperCase();
if(_2f2==="BODY"||_2f2==="HTML"){
break;
}
var disp=self.getStyle(_2ed,"display");
if(disp!="inline"&&disp!="table-row"){
c.x-=_2ed.scrollLeft;
c.y-=_2ed.scrollTop;
}
if(_2ed.parentNode){
_2ed=_2ed.parentNode;
}else{
_2ed=null;
}
}
return c;
},setElementPosition:function(elem,_2f5,_2f6){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_2f6)=="undefined"){
_2f6="px";
}
var _2f7={};
var _2f8=MochiKit.Base.isUndefinedOrNull;
if(!_2f8(_2f5.x)){
_2f7["left"]=_2f5.x+_2f6;
}
if(!_2f8(_2f5.y)){
_2f7["top"]=_2f5.y+_2f6;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_2f7});
},getElementDimensions:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp!="none"&&disp!==""&&typeof (disp)!="undefined"){
return new self.Dimensions(elem.offsetWidth||0,elem.offsetHeight||0);
}
var s=elem.style;
var _2fe=s.visibility;
var _2ff=s.position;
s.visibility="hidden";
s.position="absolute";
s.display="";
var _300=elem.offsetWidth;
var _301=elem.offsetHeight;
s.display="none";
s.position=_2ff;
s.visibility=_2fe;
return new self.Dimensions(_300,_301);
},setElementDimensions:function(elem,_303,_304){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_304)=="undefined"){
_304="px";
}
var _305={};
var _306=MochiKit.Base.isUndefinedOrNull;
if(!_306(_303.w)){
_305["width"]=_303.w+_304;
}
if(!_306(_303.h)){
_305["height"]=_303.h+_304;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_305});
},setDisplayForElement:function(_307,_308){
var _309=MochiKit.Base.extend(null,arguments,1);
var _30a=MochiKit.DOM.getElement;
for(var i=0;i<_309.length;i++){
_308=_30a(_309[i]);
if(_308){
_308.style.display=_307;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
this.elementPosition=this.getElementPosition;
this.elementDimensions=this.getElementDimensions;
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Color");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Style");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Style",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Base";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.DOM";
}
try{
if(typeof (MochiKit.Style)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Style";
}
if(typeof (MochiKit.Color)=="undefined"){
MochiKit.Color={};
}
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.4";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_315,blue,_317){
if(typeof (_317)=="undefined"||_317===null){
_317=1;
}
this.rgb={r:red,g:_315,b:blue,a:_317};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_318){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_318);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_31e){
var hsl=this.asHSL();
hsl.s=_31e;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_321){
var hsl=this.asHSL();
hsl.l=_321;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_324){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_324,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_327){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_327,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_32a,_32b){
if(typeof (_32b)=="undefined"||_32b===null){
_32b=0.5;
}
var sf=1-_32b;
var s=this.rgb;
var d=_32a.rgb;
var df=_32b;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_330){
var a=this.asRGB();
var b=_330.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_347,blue,_349){
var _34a=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_347=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_349=undefined;
}else{
_349=rgb.a;
}
}
return new _34a(red,_347,blue,_349);
},fromHSL:function(hue,_34d,_34e,_34f){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_352,_353,_354){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _357=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _358=_357._namedColors[name.toLowerCase()];
if(typeof (_358)=="string"){
return _357.fromHexString(_358);
}else{
if(name=="transparent"){
return _357.transparentColor();
}
}
return null;
},fromString:function(_359){
var self=MochiKit.Color.Color;
var _35b=_359.substr(0,3);
if(_35b=="rgb"){
return self.fromRGBString(_359);
}else{
if(_35b=="hsl"){
return self.fromHSLString(_359);
}else{
if(_359.charAt(0)=="#"){
return self.fromHexString(_359);
}
}
}
return self.fromName(_359);
},fromHexString:function(_35c){
if(_35c.charAt(0)=="#"){
_35c=_35c.substring(1);
}
var _35d=[];
var i,hex;
if(_35c.length==3){
for(i=0;i<3;i++){
hex=_35c.substr(i,1);
_35d.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_35c.substr(i,2);
_35d.push(parseInt(hex,16)/255);
}
}
var _360=MochiKit.Color.Color;
return _360.fromRGB.apply(_360,_35d);
},_fromColorString:function(pre,_362,_363,_364){
if(_364.indexOf(pre)===0){
_364=_364.substring(_364.indexOf("(",3)+1,_364.length-1);
}
var _365=_364.split(/\s*,\s*/);
var _366=[];
for(var i=0;i<_365.length;i++){
var c=_365[i];
var val;
var _36a=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_36a=="deg"){
val=parseFloat(c)/360;
}else{
if(_36a=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_363[i]*parseFloat(c);
}
}
}
_366.push(val);
}
return this[_362].apply(this,_366);
},fromComputedStyle:function(elem,_36c){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _36f=MochiKit.Style.getStyle.apply(d,arguments);
if(!_36f){
continue;
}
var _370=cls.fromString(_36f);
if(!_370){
break;
}
if(_370.asRGB().a>0){
return _370;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_376){
v*=_376;
if(v<0){
return 0;
}else{
if(v>_376){
return _376;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_37c,_37d,_37e){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_37c=hsv.s;
_37d=hsv.v;
_37e=hsv.a;
}
var red;
var _381;
var blue;
if(_37c===0){
red=_37d;
_381=_37d;
blue=_37d;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_37d*(1-_37c);
var q=_37d*(1-(_37c*f));
var t=_37d*(1-(_37c*(1-f)));
switch(i){
case 1:
red=q;
_381=_37d;
blue=p;
break;
case 2:
red=p;
_381=_37d;
blue=t;
break;
case 3:
red=p;
_381=q;
blue=_37d;
break;
case 4:
red=t;
_381=p;
blue=_37d;
break;
case 5:
red=_37d;
_381=p;
blue=q;
break;
case 6:
case 0:
red=_37d;
_381=t;
blue=p;
break;
}
}
return {r:red,g:_381,b:blue,a:_37e};
},hslToRGB:function(hue,_389,_38a,_38b){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_389=hsl.s;
_38a=hsl.l;
_38b=hsl.a;
}
var red;
var _38e;
var blue;
if(_389===0){
red=_38a;
_38e=_38a;
blue=_38a;
}else{
var m2;
if(_38a<=0.5){
m2=_38a*(1+_389);
}else{
m2=_38a+_389-(_38a*_389);
}
var m1=(2*_38a)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_38e=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_38e,b:blue,a:_38b};
},rgbToHSV:function(red,_395,blue,_397){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_395=rgb.g;
blue=rgb.b;
_397=rgb.a;
}
var max=Math.max(Math.max(red,_395),blue);
var min=Math.min(Math.min(red,_395),blue);
var hue;
var _39c;
var _39d=max;
if(min==max){
hue=0;
_39c=0;
}else{
var _39e=(max-min);
_39c=_39e/max;
if(red==max){
hue=(_395-blue)/_39e;
}else{
if(_395==max){
hue=2+((blue-red)/_39e);
}else{
hue=4+((red-_395)/_39e);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_39c,v:_39d,a:_397};
},rgbToHSL:function(red,_3a0,blue,_3a2){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_3a0=rgb.g;
blue=rgb.b;
_3a2=rgb.a;
}
var max=Math.max(red,Math.max(_3a0,blue));
var min=Math.min(red,Math.min(_3a0,blue));
var hue;
var _3a7;
var _3a8=(max+min)/2;
var _3a9=max-min;
if(_3a9===0){
hue=0;
_3a7=0;
}else{
if(_3a8<=0.5){
_3a7=_3a9/(max+min);
}else{
_3a7=_3a9/(2-max-min);
}
if(red==max){
hue=(_3a0-blue)/_3a9;
}else{
if(_3a0==max){
hue=2+((blue-red)/_3a9);
}else{
hue=4+((red-_3a0)/_3a9);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_3a7,l:_3a8,a:_3a2};
},toColorPart:function(num){
num=Math.round(num);
var _3ab=num.toString(16);
if(num<16){
return "0"+_3ab;
}
return _3ab;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _3ad=1/3;
var _3ae={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_3ad,_3ad,_3ad],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_3ad,2*_3ad,2*_3ad],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _3af=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _3ae){
var name=k+"Color";
var _3b8=m.concat([_3af,this.Color,name],_3ae[k]);
this.Color[name]=m.bind.apply(null,_3b8);
}
var _3b9=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof Color)){
return false;
}
}
return true;
};
var _3bb=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_3b9,_3bb);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Position");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Style");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Style",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.Style)=="undefined"||typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.Base, MochiKit.DOM, and MochiKit.Style!";
}
if(typeof (MochiKit.Position)=="undefined"){
MochiKit.Position={};
}
MochiKit.Position.NAME="MochiKit.Position";
MochiKit.Position.VERSION="1.4";
MochiKit.Position.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Position.toString=function(){
return this.__repr__();
};
MochiKit.Position.EXPORT_OK=[];
MochiKit.Position.EXPORT=[];
MochiKit.Base.update(MochiKit.Position,{includeScrollOffsets:false,prepare:function(){
var _3be=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _3bf=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_3be,_3bf);
},cumulativeOffset:function(_3c0){
var _3c1=0;
var _3c2=0;
do{
_3c1+=_3c0.offsetTop||0;
_3c2+=_3c0.offsetLeft||0;
_3c0=_3c0.offsetParent;
}while(_3c0);
return new MochiKit.Style.Coordinates(_3c2,_3c1);
},realOffset:function(_3c3){
var _3c4=0;
var _3c5=0;
do{
_3c4+=_3c3.scrollTop||0;
_3c5+=_3c3.scrollLeft||0;
_3c3=_3c3.parentNode;
}while(_3c3);
return new MochiKit.Style.Coordinates(_3c5,_3c4);
},within:function(_3c6,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_3c6,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_3c6);
if(_3c6.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_3c6.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_3c6.offsetWidth);
},withinIncludingScrolloffsets:function(_3c9,x,y){
var _3cc=this.realOffset(_3c9);
this.xcomp=x+_3cc.x-this.windowOffset.x;
this.ycomp=y+_3cc.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_3c9);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_3c9.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_3c9.offsetWidth);
},overlap:function(mode,_3ce){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_3ce.offsetHeight)-this.ycomp)/_3ce.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_3ce.offsetWidth)-this.xcomp)/_3ce.offsetWidth;
}
},absolutize:function(_3cf){
_3cf=MochiKit.DOM.getElement(_3cf);
if(_3cf.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _3d0=MochiKit.Position.positionedOffset(_3cf);
var _3d1=_3cf.clientWidth;
var _3d2=_3cf.clientHeight;
var _3d3={"position":_3cf.style.position,"left":_3d0.x-parseFloat(_3cf.style.left||0),"top":_3d0.y-parseFloat(_3cf.style.top||0),"width":_3cf.style.width,"height":_3cf.style.height};
_3cf.style.position="absolute";
_3cf.style.top=_3d0.y+"px";
_3cf.style.left=_3d0.x+"px";
_3cf.style.width=_3d1+"px";
_3cf.style.height=_3d2+"px";
return _3d3;
},positionedOffset:function(_3d4){
var _3d5=0,_3d6=0;
do{
_3d5+=_3d4.offsetTop||0;
_3d6+=_3d4.offsetLeft||0;
_3d4=_3d4.offsetParent;
if(_3d4){
p=MochiKit.Style.getStyle(_3d4,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_3d4);
return new MochiKit.Style.Coordinates(_3d6,_3d5);
},relativize:function(_3d7,_3d8){
_3d7=MochiKit.DOM.getElement(_3d7);
if(_3d7.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_3d7.style.top||0)-(_3d8["top"]||0);
var left=parseFloat(_3d7.style.left||0)-(_3d8["left"]||0);
_3d7.style.position=_3d8["position"];
_3d7.style.top=top+"px";
_3d7.style.left=left+"px";
_3d7.style.width=_3d8["width"];
_3d7.style.height=_3d8["height"];
},clone:function(_3db,_3dc){
_3db=MochiKit.DOM.getElement(_3db);
_3dc=MochiKit.DOM.getElement(_3dc);
_3dc.style.position="absolute";
var _3dd=this.cumulativeOffset(_3db);
_3dc.style.top=_3dd.y+"px";
_3dc.style.left=_3dd.x+"px";
_3dc.style.width=_3db.offsetWidth+"px";
_3dc.style.height=_3db.offsetHeight+"px";
},page:function(_3de){
var _3df=0;
var _3e0=0;
var _3e1=_3de;
do{
_3df+=_3e1.offsetTop||0;
_3e0+=_3e1.offsetLeft||0;
if(_3e1.offsetParent==document.body&&MochiKit.Style.getStyle(_3e1,"position")=="absolute"){
break;
}
}while(_3e1=_3e1.offsetParent);
_3e1=_3de;
do{
_3df-=_3e1.scrollTop||0;
_3e0-=_3e1.scrollLeft||0;
}while(_3e1=_3e1.parentNode);
return new MochiKit.Style.Coordinates(_3e0,_3df);
}});
MochiKit.Position.__new__=function(win){
var m=MochiKit.Base;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Position.__new__(this);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Signal");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Style");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Style",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.DOM!";
}
try{
if(typeof (MochiKit.Style)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.Style!";
}
if(typeof (MochiKit.Signal)=="undefined"){
MochiKit.Signal={};
}
MochiKit.Signal.NAME="MochiKit.Signal";
MochiKit.Signal.VERSION="1.4";
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}}";
}else{
str+="}";
}
}
if(this.type()=="mouseover"||this.type()=="mouseout"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},src:function(){
return this._src;
},event:function(){
return this._event;
},type:function(){
return this._event.type||undefined;
},target:function(){
return this._event.target||this._event.srcElement;
},_relatedTarget:null,relatedTarget:function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
if(elem!==null){
this._relatedTarget=elem;
return elem;
}
return undefined;
},_modifier:null,modifier:function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
},_key:null,key:function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
},_mouse:null,mouse:function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.Style.Coordinates(0,0);
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page=new MochiKit.Style.Coordinates(0,0);
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
this._mouse=m;
return m;
}
return undefined;
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
},_confirmUnload:null,confirmUnload:function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _3f0=MochiKit.Signal._specialMacKeys;
for(i=63236;i<=63242;i++){
_3f0[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _3f1=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_3f1[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_3f1[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_3f1[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_3f1[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_3f3){
this.source=_3f3.source;
this.signal=_3f3.signal;
this.listener=_3f3.listener;
this.isDOM=_3f3.isDOM;
this.objOrFunc=_3f3.objOrFunc;
this.funcOrStr=_3f3.funcOrStr;
this.connected=_3f3.connected;
};
MochiKit.Signal.Ident.prototype={};
MochiKit.Base.update(MochiKit.Signal,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},_unloadCache:function(){
var self=MochiKit.Signal;
var _3f5=self._observers;
for(var i=0;i<_3f5.length;i++){
if(_3f5[i].signal!=="onload"&&_3f5[i].signal!=="onunload"){
self._disconnect(_3f5[i]);
}
}
},_listener:function(src,sig,func,obj,_3fb){
var self=MochiKit.Signal;
var E=self.Event;
if(!_3fb){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bind(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_3fe){
obj[func].apply(obj,[new E(src,_3fe)]);
var _3ff=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_3ff);
};
}else{
return function(_400){
obj[func].apply(obj,[new E(src,_400)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_401){
func.apply(obj,[new E(src,_401)]);
var _402=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_402);
};
}else{
return function(_403){
func.apply(obj,[new E(src,_403)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_409){
var e=new E(src,_409);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_40b,_40c){
var obj=null;
var func=null;
if(typeof (_40c)!="undefined"){
obj=_40b;
func=_40c;
if(typeof (_40c)=="string"){
if(typeof (_40b[_40c])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_40c)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_40b)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_40b;
}
}
return [obj,func];
},connect:function(src,sig,_411,_412){
src=MochiKit.DOM.getElement(src);
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _414=self._getDestPair(_411,_412);
var obj=_414[0];
var func=_414[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _417=!!(src.addEventListener||src.attachEvent);
if(_417&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _418=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
var _418=self._listener(src,sig,func,obj,_417);
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_418,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_418);
}
}
var _419=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_418,isDOM:_417,objOrFunc:_411,funcOrStr:_412,connected:true});
self._observers.push(_419);
if(!_417&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_419],arguments,1);
src.__connect__.apply(src,args);
}
return _419;
},_disconnect:function(_41b){
if(!_41b.connected){
return;
}
_41b.connected=false;
if(!_41b.isDOM){
return;
}
var src=_41b.source;
var sig=_41b.signal;
var _41e=_41b.listener;
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_41e,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_41e);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_41f){
var self=MochiKit.Signal;
var _421=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=MochiKit.DOM.getElement(arguments[0]);
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_421.length-1;i>=0;i--){
var o=_421[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(!self._lock){
_421.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_421,_41f);
if(idx>=0){
self._disconnect(_41f);
if(!self._lock){
_421.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_42a,_42b){
var self=MochiKit.Signal;
var _42d=self._observers;
var _42e=self._disconnect;
var _42f=self._lock;
var _430=self._dirty;
if(typeof (_42b)==="undefined"){
_42b=null;
}
for(var i=_42d.length-1;i>=0;i--){
var _432=_42d[i];
if(_432.objOrFunc===_42a&&(_42b===null||_432.funcOrStr===_42b)){
_42e(_432);
if(_42f){
_430=true;
}else{
_42d.splice(i,1);
}
}
}
self._dirty=_430;
},disconnectAll:function(src,sig){
src=MochiKit.DOM.getElement(src);
var m=MochiKit.Base;
var _436=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _438=self._disconnect;
var _439=self._observers;
var i,_43b;
var _43c=self._lock;
var _43d=self._dirty;
if(_436.length===0){
for(i=_439.length-1;i>=0;i--){
_43b=_439[i];
if(_43b.source===src){
_438(_43b);
if(!_43c){
_439.splice(i,1);
}else{
_43d=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_436.length;i++){
sigs[_436[i]]=true;
}
for(i=_439.length-1;i>=0;i--){
_43b=_439[i];
if(_43b.source===src&&_43b.signal in sigs){
_438(_43b);
if(!_43c){
_439.splice(i,1);
}else{
_43d=true;
}
}
}
}
self._dirty=_43d;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _442=self._observers;
src=MochiKit.DOM.getElement(src);
var args=MochiKit.Base.extend(null,arguments,2);
var _444=[];
self._lock=true;
for(var i=0;i<_442.length;i++){
var _446=_442[i];
if(_446.source===src&&_446.signal===sig&&_446.connected){
try{
_446.listener.apply(src,args);
}
catch(e){
_444.push(e);
}
}
}
self._lock=false;
if(self._dirty){
self._dirty=false;
for(var i=_442.length-1;i>=0;i--){
if(!_442[i].connected){
_442.splice(i,1);
}
}
}
if(_444.length==1){
throw _444[0];
}else{
if(_444.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_444;
throw e;
}
}
}});
MochiKit.Signal.EXPORT_OK=[];
MochiKit.Signal.EXPORT=["connect","disconnect","signal","disconnectAll","disconnectAllTo"];
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=false;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Visual");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Style");
dojo.require("MochiKit.Color");
dojo.require("MochiKit.Position");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Style",[]);
JSAN.use("MochiKit.Color",[]);
JSAN.use("MochiKit.Position",[]);
}
try{
if(typeof (MochiKit.Base)==="undefined"||typeof (MochiKit.DOM)==="undefined"||typeof (MochiKit.Style)==="undefined"||typeof (MochiKit.Position)==="undefined"||typeof (MochiKit.Color)==="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Visual depends on MochiKit.Base, MochiKit.DOM, MochiKit.Style, MochiKit.Position and MochiKit.Color!";
}
if(typeof (MochiKit.Visual)=="undefined"){
MochiKit.Visual={};
}
MochiKit.Visual.NAME="MochiKit.Visual";
MochiKit.Visual.VERSION="1.4";
MochiKit.Visual.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Visual.toString=function(){
return this.__repr__();
};
MochiKit.Visual._RoundCorners=function(e,_44b){
e=MochiKit.DOM.getElement(e);
this._setOptions(_44b);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _44c=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_44c=C.fromBackground(e);
}else{
if(!(_44c instanceof C)){
_44c=C.fromString(_44c);
}
}
this.isTransparent=(_44c.asRGB().a<=0);
var _44e=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_44e=C.fromBackground(e.offsetParent);
}else{
if(!(_44e instanceof C)){
_44e=C.fromString(_44e);
}
}
this._roundCornersImpl(e,_44c,_44e);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _450=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _452=doc.defaultView.getComputedStyle(e,null);
if(typeof (_452)==="undefined"||_452===null){
return e;
}
var _453=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_452.getPropertyValue("padding-top"),marginRight:_452.getPropertyValue("padding-right"),marginBottom:_452.getPropertyValue("padding-bottom"),marginLeft:_452.getPropertyValue("padding-left"),padding:"0px"}});
_453.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_453);
return e;
},_roundCornersImpl:function(e,_455,_456){
if(this.options.border){
this._renderBorder(e,_456);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_455,_456);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_455,_456);
}
},_renderBorder:function(el,_458){
var _459="1px solid "+this._borderColor(_458);
var _45a="border-left: "+_459;
var _45b="border-right: "+_459;
var _45c="style='"+_45a+";"+_45b+"'";
el.innerHTML="<div "+_45c+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_45e,_45f){
var _460=this._createCorner(_45f);
for(var i=0;i<this.options.numSlices;i++){
_460.appendChild(this._createCornerSlice(_45e,_45f,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_460,el.firstChild);
},_roundBottomCorners:function(el,_463,_464){
var _465=this._createCorner(_464);
for(var i=(this.options.numSlices-1);i>=0;i--){
_465.appendChild(this._createCornerSlice(_463,_464,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_465);
},_createCorner:function(_467){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_467.toString()}});
},_createCornerSlice:function(_469,_46a,n,_46c){
var _46d=MochiKit.DOM.SPAN();
var _46e=_46d.style;
_46e.backgroundColor=_469.toString();
_46e.display="block";
_46e.height="1px";
_46e.overflow="hidden";
_46e.fontSize="1px";
var _46f=this._borderColor(_469,_46a);
if(this.options.border&&n===0){
_46e.borderTopStyle="solid";
_46e.borderTopWidth="1px";
_46e.borderLeftWidth="0px";
_46e.borderRightWidth="0px";
_46e.borderBottomWidth="0px";
_46e.height="0px";
_46e.borderColor=_46f.toString();
}else{
if(_46f){
_46e.borderColor=_46f.toString();
_46e.borderStyle="solid";
_46e.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_46e.height="2px";
}
this._setMargin(_46d,n,_46c);
this._setBorder(_46d,n,_46c);
return _46d;
},_setOptions:function(_470){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_470);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _471=this.options.corners;
if(this._hasString(_471,"all","top")){
return "";
}
var _472=(_471.indexOf("tl")!=-1);
var _473=(_471.indexOf("tr")!=-1);
if(_472&&_473){
return "";
}
if(_472){
return "left";
}
if(_473){
return "right";
}
return "";
},_whichSideBottom:function(){
var _474=this.options.corners;
if(this._hasString(_474,"all","bottom")){
return "";
}
var _475=(_474.indexOf("bl")!=-1);
var _476=(_474.indexOf("br")!=-1);
if(_475&&_476){
return "";
}
if(_475){
return "left";
}
if(_476){
return "right";
}
return "";
},_borderColor:function(_477,_478){
if(_477=="transparent"){
return _478;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _478.blendedColor(_477);
}
}
}
return "";
},_setMargin:function(el,n,_47b){
var _47c=this._marginSize(n)+"px";
var _47d=(_47b=="top"?this._whichSideTop():this._whichSideBottom());
var _47e=el.style;
if(_47d=="left"){
_47e.marginLeft=_47c;
_47e.marginRight="0px";
}else{
if(_47d=="right"){
_47e.marginRight=_47c;
_47e.marginLeft="0px";
}else{
_47e.marginLeft=_47c;
_47e.marginRight=_47c;
}
}
},_setBorder:function(el,n,_481){
var _482=this._borderSize(n)+"px";
var _483=(_481=="top"?this._whichSideTop():this._whichSideBottom());
var _484=el.style;
if(_483=="left"){
_484.borderLeftWidth=_482;
_484.borderRightWidth="0px";
}else{
if(_483=="right"){
_484.borderRightWidth=_482;
_484.borderLeftWidth="0px";
}else{
_484.borderLeftWidth=_482;
_484.borderRightWidth=_482;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _487=[1,0];
return _487[n];
}else{
if(o.compact){
var _488=[2,1];
return _488[n];
}else{
if(o.blend){
var _489=[3,2,1,0];
return _489[n];
}else{
var _48a=[5,3,2,1];
return _48a[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _48d;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_48d=[1,0];
}else{
if(o.blend){
_48d=[2,1,1,1];
}else{
if(o.border){
_48d=[0,2,0,0];
}else{
if(this.isTransparent){
_48d=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _48d[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_492){
new MochiKit.Visual._RoundCorners(e,_492);
};
MochiKit.Visual.roundClass=function(_493,_494,_495){
var _496=MochiKit.DOM.getElementsByTagAndClassName(_493,_494);
for(var i=0;i<_496.length;i++){
MochiKit.Visual.roundElement(_496[i],_495);
}
};
MochiKit.Visual.tagifyText=function(_498,_499){
_499=_499||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_499+=";zoom:1";
}
_498=MochiKit.DOM.getElement(_498);
var ma=MochiKit.Base.map;
ma(function(_49b){
if(_49b.nodeType==3){
ma(function(_49c){
_498.insertBefore(MochiKit.DOM.SPAN({style:_499},_49c==" "?String.fromCharCode(160):_49c),_49b);
},_49b.nodeValue.split(""));
MochiKit.DOM.removeElement(_49b);
}
},_498.childNodes);
};
MochiKit.Visual.forceRerendering=function(_49d){
try{
_49d=MochiKit.DOM.getElement(_49d);
var n=document.createTextNode(" ");
_49d.appendChild(n);
_49d.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_49f,_4a0,_4a1){
_4a1=MochiKit.Base.update({speed:0.1,delay:0},_4a1);
var _4a2=_4a1.delay;
var _4a3=0;
MochiKit.Base.map(function(_4a4){
_4a1.delay=_4a3*_4a1.speed+_4a2;
new _4a0(_4a4,_4a1);
_4a3+=1;
},_49f);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_4a5,_4a6,_4a7){
_4a5=MochiKit.DOM.getElement(_4a5);
_4a6=(_4a6||"appear").toLowerCase();
_4a7=MochiKit.Base.update({queue:{position:"end",scope:(_4a5.id||"global"),limit:1}},_4a7);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_4a5,"display")!="none"?v.PAIRS[_4a6][1]:v.PAIRS[_4a6][0]](_4a5,_4a7);
};
MochiKit.Visual.Transitions={};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return (-Math.cos(pos*Math.PI)/2)+0.5;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return ((-Math.cos(pos*Math.PI)/4)+0.75)+Math.random()/4;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return (-Math.cos(pos*Math.PI*(9*pos))/2)+0.5;
};
MochiKit.Visual.Transitions.pulse=function(pos,_4af){
if(!_4af){
return (Math.floor(pos*10)%2===0?(pos*10-Math.floor(pos*10)):1-(pos*10-Math.floor(pos*10)));
}
return (Math.round((pos%(1/_4af))*_4af)==0?((pos*_4af*2)-Math.floor(pos*_4af*2)):1-((pos*_4af*2)-Math.floor(pos*_4af*2)));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_4b3){
var _4b4=new Date().getTime();
var _4b5=(typeof (_4b3.options.queue)=="string")?_4b3.options.queue:_4b3.options.queue.position;
var ma=MochiKit.Base.map;
switch(_4b5){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_4b3.finishOn;
e.finishOn+=_4b3.finishOn;
}
},this.effects);
break;
case "end":
var _4b8;
ma(function(e){
var i=e.finishOn;
if(i>=(_4b8||i)){
_4b8=i;
}
},this.effects);
_4b4=_4b8||_4b4;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
}
_4b3.startOn+=_4b4;
_4b3.finishOn+=_4b4;
if(!_4b3.options.queue.limit||this.effects.length<_4b3.options.queue.limit){
this.effects.push(_4b3);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_4bd){
return setInterval(func,_4bd);
},remove:function(_4be){
this.effects=MochiKit.Base.filter(function(e){
return e!=_4be;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_4c0){
clearInterval(_4c0);
},loop:function(){
var _4c1=new Date().getTime();
MochiKit.Base.map(function(_4c2){
_4c2.loop(_4c1);
},this.effects);
}});
MochiKit.Visual.Queues={instances:{},get:function(_4c3){
if(typeof (_4c3)!="string"){
return _4c3;
}
if(!this.instances[_4c3]){
this.instances[_4c3]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_4c3];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.DefaultOptions={transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_4c4){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_4c4,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_4c6){
if(_4c6>=this.startOn){
if(_4c6>=this.finishOn){
return this.finalize();
}
var pos=(_4c6-this.startOn)/(this.finishOn-this.startOn);
var _4c8=Math.round(pos*this.options.fps*this.options.duration);
if(_4c8>this.currentFrame){
this.render(pos);
this.currentFrame=_4c8;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
if(this.options.transition){
pos=this.options.transition(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_4ca){
},event:function(_4cb){
if(this.options[_4cb+"Internal"]){
this.options[_4cb+"Internal"](this);
}
if(this.options[_4cb]){
this.options[_4cb](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_4cc,_4cd){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_4cc,_4cd);
}
this.__init__(_4cc,_4cd);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_4cf,_4d0){
this.effects=_4cf||[];
this.start(_4d0);
},update:function(_4d1){
MochiKit.Base.map(function(_4d2){
_4d2.render(_4d1);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_4d3){
_4d3.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_4d4,_4d5){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_4d4,_4d5);
}
this.__init__(_4d4,_4d5);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_4d7,_4d8){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_4d7);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_4d8=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_4d8);
this.start(_4d8);
},update:function(_4db){
MochiKit.Style.setStyle(this.element,{"opacity":_4db});
}});
MochiKit.Visual.Move=function(_4dc,_4dd){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_4dc,_4dd);
}
this.__init__(_4dc,_4dd);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_4df,_4e0){
this.element=MochiKit.DOM.getElement(_4df);
_4e0=MochiKit.Base.update({x:0,y:0,mode:"relative"},_4e0);
this.start(_4e0);
},setup:function(){
MochiKit.DOM.makePositioned(this.element);
var s=this.element.style;
var _4e2=s.visibility;
var _4e3=s.display;
if(_4e3=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_4e3=="none"){
s.visibility=_4e2;
s.display=_4e3;
}
},update:function(_4e4){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_4e4+this.originalLeft)+"px",top:Math.round(this.options.y*_4e4+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_4e5,_4e6,_4e7){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_4e5,_4e6,_4e7);
}
this.__init__(_4e5,_4e6,_4e7);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_4e9,_4ea,_4eb){
this.element=MochiKit.DOM.getElement(_4e9);
_4eb=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_4ea},_4eb);
this.start(_4eb);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _4ef=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_4f0){
if(_4ef.indexOf(_4f0)>0){
this.fontSize=parseFloat(_4ef);
this.fontSizeType=_4f0;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_4f1){
var _4f2=(this.options.scaleFrom/100)+(this.factor*_4f1);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_4f2+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_4f2,this.dims[1]*_4f2);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_4f3,_4f4){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_4f4)+"px";
}
if(this.options.scaleY){
d.height=r(_4f3)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_4f3-this.dims[0])/2;
var _4f8=(_4f4-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_4f8+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_4f8+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_4f9,_4fa){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_4f9,_4fa);
}
this.__init__(_4f9,_4fa);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_4fc,_4fd){
this.element=MochiKit.DOM.getElement(_4fc);
_4fd=MochiKit.Base.update({startcolor:"#ffff99"},_4fd);
this.start(_4fd);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_502){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_502));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_505,_506){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_505,_506);
}
this.__init__(_505,_506);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_508,_509){
this.element=MochiKit.DOM.getElement(_508);
this.start(_509);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _50b=p.cumulativeOffset(this.element);
if(this.options.offset){
_50b.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_50b.y>max?max:_50b.y)-this.scrollStart;
},update:function(_50d){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_50d*this.delta));
}});
MochiKit.Visual.CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_50f,_510){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_50f,_510);
}
this.__init__(_50f,_510);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_512,_513){
this.element=MochiKit.DOM.getElement(_512);
this.start(_513);
},setup:function(){
var b=MochiKit.Base;
var _515=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _516,unit;
for(var s in _515){
_516=_515[s];
s=b.camelize(s);
if(MochiKit.Visual.CSS_LENGTH.test(_516)){
var _519=_516.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_516=parseFloat(_519[1]);
unit=(_519.length==3)?_519[2]:null;
this.styleEnd[s]=_516;
this.units[s]=unit;
_516=MochiKit.Style.getStyle(this.element,s);
_519=_516.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_516=parseFloat(_519[1]);
this.styleStart[s]=_516;
}else{
var c=MochiKit.Color.Color;
_516=c.fromString(_516);
if(_516){
this.units[s]="color";
this.styleEnd[s]=_516.toHexString();
_516=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_516).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}
}
},update:function(_51d){
var _51e;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _521=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_521[i]+(end[i]-_521[i])*_51d));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_51e=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_51d*1000)/1000+this.units[s];
this.element.style[s]=_51e;
}
}
}});
MochiKit.Visual.fade=function(_524,_525){
var s=MochiKit.Style;
var _527=s.getStyle(_524,"opacity");
_525=MochiKit.Base.update({from:s.getStyle(_524,"opacity")||1,to:0,afterFinishInternal:function(_528){
if(_528.options.to!==0){
return;
}
s.hideElement(_528.element);
s.setStyle(_528.element,{"opacity":_527});
}},_525);
return new MochiKit.Visual.Opacity(_524,_525);
};
MochiKit.Visual.appear=function(_529,_52a){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_52a=MochiKit.Base.update({from:(s.getStyle(_529,"display")=="none"?0:s.getStyle(_529,"opacity")||0),to:1,afterFinishInternal:function(_52d){
v.forceRerendering(_52d.element);
},beforeSetupInternal:function(_52e){
s.setStyle(_52e.element,{"opacity":_52e.options.from});
s.showElement(_52e.element);
}},_52a);
return new v.Opacity(_529,_52a);
};
MochiKit.Visual.puff=function(_52f,_530){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_52f=MochiKit.DOM.getElement(_52f);
var _533={position:s.getStyle(_52f,"position"),top:_52f.style.top,left:_52f.style.left,width:_52f.style.width,height:_52f.style.height,opacity:s.getStyle(_52f,"opacity")};
_530=MochiKit.Base.update({beforeSetupInternal:function(_534){
MochiKit.Position.absolutize(_534.effects[0].element);
},afterFinishInternal:function(_535){
s.hideElement(_535.effects[0].element);
s.setStyle(_535.effects[0].element,_533);
},scaleContent:true,scaleFromCenter:true},_530);
return new v.Parallel([new v.Scale(_52f,200,{sync:true,scaleFromCenter:_530.scaleFromCenter,scaleContent:_530.scaleContent,restoreAfterFinish:true}),new v.Opacity(_52f,{sync:true,to:0})],_530);
};
MochiKit.Visual.blindUp=function(_536,_537){
var d=MochiKit.DOM;
_536=d.getElement(_536);
var _539=d.makeClipping(_536);
_537=MochiKit.Base.update({scaleContent:false,scaleX:false,restoreAfterFinish:true,afterFinishInternal:function(_53a){
MochiKit.Style.hideElement(_53a.element);
d.undoClipping(_53a.element,_539);
}},_537);
return new MochiKit.Visual.Scale(_536,0,_537);
};
MochiKit.Visual.blindDown=function(_53b,_53c){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_53b=d.getElement(_53b);
var _53f=s.getElementDimensions(_53b);
var _540;
_53c=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_53f.h,originalWidth:_53f.w},restoreAfterFinish:true,afterSetupInternal:function(_541){
_540=d.makeClipping(_541.element);
s.setStyle(_541.element,{height:"0px"});
s.showElement(_541.element);
},afterFinishInternal:function(_542){
d.undoClipping(_542.element,_540);
}},_53c);
return new MochiKit.Visual.Scale(_53b,100,_53c);
};
MochiKit.Visual.switchOff=function(_543,_544){
var d=MochiKit.DOM;
_543=d.getElement(_543);
var _546=MochiKit.Style.getStyle(_543,"opacity");
var _547;
_544=MochiKit.Base.update({duration:0.3,scaleFromCenter:true,scaleX:false,scaleContent:false,restoreAfterFinish:true,beforeSetupInternal:function(_548){
d.makePositioned(_548.element);
_547=d.makeClipping(_548.element);
},afterFinishInternal:function(_549){
MochiKit.Style.hideElement(_549.element);
d.undoClipping(_549.element,_547);
d.undoPositioned(_549.element);
MochiKit.Style.setStyle(_549.element,{"opacity":_546});
}},_544);
var v=MochiKit.Visual;
return new v.appear(_543,{duration:0.4,from:0,transition:v.Transitions.flicker,afterFinishInternal:function(_54b){
new v.Scale(_54b.element,1,_544);
}});
};
MochiKit.Visual.dropOut=function(_54c,_54d){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_54c=d.getElement(_54c);
var _550={top:s.getStyle(_54c,"top"),left:s.getStyle(_54c,"left"),opacity:s.getStyle(_54c,"opacity")};
_54d=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_551){
d.makePositioned(_551.effects[0].element);
},afterFinishInternal:function(_552){
s.hideElement(_552.effects[0].element);
d.undoPositioned(_552.effects[0].element);
s.setStyle(_552.effects[0].element,_550);
}},_54d);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_54c,{x:0,y:_54d.distance,sync:true}),new v.Opacity(_54c,{sync:true,to:0})],_54d);
};
MochiKit.Visual.shake=function(_554,_555){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_554=d.getElement(_554);
_555=MochiKit.Base.update({x:-20,y:0,duration:0.05,afterFinishInternal:function(_559){
d.undoPositioned(_559.element);
s.setStyle(_559.element,_55a);
}},_555);
var _55a={top:s.getStyle(_554,"top"),left:s.getStyle(_554,"left")};
return new v.Move(_554,{x:20,y:0,duration:0.05,afterFinishInternal:function(_55b){
new v.Move(_55b.element,{x:-40,y:0,duration:0.1,afterFinishInternal:function(_55c){
new v.Move(_55c.element,{x:40,y:0,duration:0.1,afterFinishInternal:function(_55d){
new v.Move(_55d.element,{x:-40,y:0,duration:0.1,afterFinishInternal:function(_55e){
new v.Move(_55e.element,{x:40,y:0,duration:0.1,afterFinishInternal:function(_55f){
new v.Move(_55f.element,_555);
}});
}});
}});
}});
}});
};
MochiKit.Visual.slideDown=function(_560,_561){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_560=d.getElement(_560);
if(!_560.firstChild){
throw "MochiKit.Visual.slideDown must be used on a element with a child";
}
d.removeEmptyTextNodes(_560);
var _565=s.getStyle(_560.firstChild,"bottom")||0;
var _566=s.getElementDimensions(_560);
var _567;
_561=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_566.h,originalWidth:_566.w},restoreAfterFinish:true,afterSetupInternal:function(_568){
d.makePositioned(_568.element);
d.makePositioned(_568.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_568.element,{top:""});
}
_567=d.makeClipping(_568.element);
s.setStyle(_568.element,{height:"0px"});
s.showElement(_568.element);
},afterUpdateInternal:function(_569){
s.setStyle(_569.element.firstChild,{bottom:(_569.dims[0]-_569.element.clientHeight)+"px"});
},afterFinishInternal:function(_56a){
d.undoClipping(_56a.element,_567);
if(/MSIE/.test(navigator.userAgent)){
d.undoPositioned(_56a.element);
d.undoPositioned(_56a.element.firstChild);
}else{
d.undoPositioned(_56a.element.firstChild);
d.undoPositioned(_56a.element);
}
s.setStyle(_56a.element.firstChild,{bottom:_565});
}},_561);
return new MochiKit.Visual.Scale(_560,100,_561);
};
MochiKit.Visual.slideUp=function(_56b,_56c){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_56b=d.getElement(_56b);
if(!_56b.firstChild){
throw "MochiKit.Visual.slideUp must be used on a element with a child";
}
d.removeEmptyTextNodes(_56b);
var _570=s.getStyle(_56b.firstChild,"bottom");
var _571;
_56c=b.update({scaleContent:false,scaleX:false,scaleMode:"box",scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_572){
d.makePositioned(_572.element);
d.makePositioned(_572.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_572.element,{top:""});
}
_571=d.makeClipping(_572.element);
s.showElement(_572.element);
},afterUpdateInternal:function(_573){
s.setStyle(_573.element.firstChild,{bottom:(_573.dims[0]-_573.element.clientHeight)+"px"});
},afterFinishInternal:function(_574){
s.hideElement(_574.element);
d.undoClipping(_574.element,_571);
d.undoPositioned(_574.element.firstChild);
d.undoPositioned(_574.element);
s.setStyle(_574.element.firstChild,{bottom:_570});
}},_56c);
return new MochiKit.Visual.Scale(_56b,0,_56c);
};
MochiKit.Visual.squish=function(_575,_576){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var _579;
_576=b.update({restoreAfterFinish:true,beforeSetupInternal:function(_57a){
_579=d.makeClipping(_57a.element);
},afterFinishInternal:function(_57b){
MochiKit.Style.hideElement(_57b.element);
d.undoClipping(_57b.element,_579);
}},_576);
return new MochiKit.Visual.Scale(_575,/Opera/.test(navigator.userAgent)?1:0,_576);
};
MochiKit.Visual.grow=function(_57c,_57d){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_57c=d.getElement(_57c);
_57d=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_57d);
var _581={top:_57c.style.top,left:_57c.style.left,height:_57c.style.height,width:_57c.style.width,opacity:s.getStyle(_57c,"opacity")};
var dims=s.getElementDimensions(_57c);
var _583,_584;
var _585,_586;
switch(_57d.direction){
case "top-left":
_583=_584=_585=_586=0;
break;
case "top-right":
_583=dims.w;
_584=_586=0;
_585=-dims.w;
break;
case "bottom-left":
_583=_585=0;
_584=dims.h;
_586=-dims.h;
break;
case "bottom-right":
_583=dims.w;
_584=dims.h;
_585=-dims.w;
_586=-dims.h;
break;
case "center":
_583=dims.w/2;
_584=dims.h/2;
_585=-dims.w/2;
_586=-dims.h/2;
break;
}
var _587=MochiKit.Base.update({beforeSetupInternal:function(_588){
s.setStyle(_588.effects[0].element,{height:"0px"});
s.showElement(_588.effects[0].element);
},afterFinishInternal:function(_589){
d.undoClipping(_589.effects[0].element);
d.undoPositioned(_589.effects[0].element);
s.setStyle(_589.effects[0].element,_581);
}},_57d);
return new v.Move(_57c,{x:_583,y:_584,duration:0.01,beforeSetupInternal:function(_58a){
s.hideElement(_58a.element);
d.makeClipping(_58a.element);
d.makePositioned(_58a.element);
},afterFinishInternal:function(_58b){
new v.Parallel([new v.Opacity(_58b.element,{sync:true,to:1,from:0,transition:_57d.opacityTransition}),new v.Move(_58b.element,{x:_585,y:_586,sync:true,transition:_57d.moveTransition}),new v.Scale(_58b.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_57d.scaleTransition,scaleContent:_57d.scaleContent,scaleFromCenter:_57d.scaleFromCenter,restoreAfterFinish:true})],_587);
}});
};
MochiKit.Visual.shrink=function(_58c,_58d){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_58c=d.getElement(_58c);
_58d=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_58d);
var _591={top:_58c.style.top,left:_58c.style.left,height:_58c.style.height,width:_58c.style.width,opacity:s.getStyle(_58c,"opacity")};
var dims=s.getElementDimensions(_58c);
var _593,_594;
switch(_58d.direction){
case "top-left":
_593=_594=0;
break;
case "top-right":
_593=dims.w;
_594=0;
break;
case "bottom-left":
_593=0;
_594=dims.h;
break;
case "bottom-right":
_593=dims.w;
_594=dims.h;
break;
case "center":
_593=dims.w/2;
_594=dims.h/2;
break;
}
var _595;
var _596=MochiKit.Base.update({beforeStartInternal:function(_597){
_595=d.makePositioned(_597.effects[0].element);
d.makeClipping(_597.effects[0].element);
},afterFinishInternal:function(_598){
s.hideElement(_598.effects[0].element);
d.undoClipping(_598.effects[0].element,_595);
d.undoPositioned(_598.effects[0].element);
s.setStyle(_598.effects[0].element,_591);
}},_58d);
return new v.Parallel([new v.Opacity(_58c,{sync:true,to:0,from:1,transition:_58d.opacityTransition}),new v.Scale(_58c,/Opera/.test(navigator.userAgent)?1:0,{sync:true,transition:_58d.scaleTransition,scaleContent:_58d.scaleContent,scaleFromCenter:_58d.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_58c,{x:_593,y:_594,sync:true,transition:_58d.moveTransition})],_596);
};
MochiKit.Visual.pulsate=function(_599,_59a){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _59e=MochiKit.Style.getStyle(_599,"opacity");
_59a=b.update({duration:3,from:0,afterFinishInternal:function(_59f){
MochiKit.Style.setStyle(_59f.element,{"opacity":_59e});
}},_59a);
var _5a0=_59a.transition||v.Transitions.sinoidal;
var _5a1=b.bind(function(pos){
return _5a0(1-v.Transitions.pulse(pos,_59a.pulses));
},_5a0);
b.bind(_5a1,_5a0);
return new v.Opacity(_599,b.update({transition:_5a1},_59a));
};
MochiKit.Visual.fold=function(_5a3,_5a4){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_5a3=d.getElement(_5a3);
var _5a8={top:_5a3.style.top,left:_5a3.style.left,width:_5a3.style.width,height:_5a3.style.height};
var _5a9=d.makeClipping(_5a3);
_5a4=MochiKit.Base.update({scaleContent:false,scaleX:false,afterFinishInternal:function(_5aa){
new v.Scale(_5a3,1,{scaleContent:false,scaleY:false,afterFinishInternal:function(_5ab){
s.hideElement(_5ab.element);
d.undoClipping(_5ab.element,_5a9);
s.setStyle(_5ab.element,_5a8);
}});
}},_5a4);
return new v.Scale(_5a3,5,_5a4);
};
MochiKit.Visual.Color=MochiKit.Color.Color;
MochiKit.Visual.getElementsComputedStyle=MochiKit.DOM.computedStyle;
MochiKit.Visual.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
MochiKit.Visual.EXPORT=["roundElement","roundClass","tagifyText","multiple","toggle","Parallel","Opacity","Move","Scale","Highlight","ScrollTo","Morph","fade","appear","puff","blindUp","blindDown","switchOff","dropOut","shake","slideDown","slideUp","squish","grow","shrink","pulsate","fold"];
MochiKit.Visual.EXPORT_OK=["Base","PAIRS"];
MochiKit.Visual.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Selector");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Iter");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Iter",[]);
}
try{
if(typeof (MochiKit.Base)==="undefined"||typeof (MochiKit.DOM)==="undefined"||typeof (MochiKit.Iter)==="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Selector depends on MochiKit.Base, MochiKit.DOM and MochiKit.Iter!";
}
if(typeof (MochiKit.Selector)=="undefined"){
MochiKit.Selector={};
}
MochiKit.Selector.NAME="MochiKit.Selector";
MochiKit.Selector.VERSION="1.4";
MochiKit.Selector.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Selector.toString=function(){
return this.__repr__();
};
MochiKit.Selector.EXPORT=["Selector","findChildElements","findDocElements","$$"];
MochiKit.Selector.EXPORT_OK=[];
MochiKit.Selector.Selector=function(_5ad){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_5ad.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_5ae){
throw "Parse error in selector: "+_5ae;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _5b0=this.params;
var expr=this.expression;
var _5b2,_5b3,_5b4,rest;
while(_5b2=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_5b0.attributes=_5b0.attributes||[];
_5b0.attributes.push({name:_5b2[2],operator:_5b2[3],value:_5b2[4]||_5b2[5]||""});
expr=_5b2[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_5b2=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_5b3=_5b2[1];
_5b4=_5b2[2];
rest=_5b2[3];
switch(_5b3){
case "#":
_5b0.id=_5b4;
break;
case ".":
_5b0.classNames.push(_5b4);
break;
case ":":
_5b0.pseudoClassNames.push(_5b4);
break;
case "":
case undefined:
_5b0.tagName=_5b4.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _5b7=this.params;
var _5b8=[];
var _5b9,i;
function childElements(_5bb){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_5bb+".childNodes)";
}
if(_5b7.wildcard){
_5b8.push("true");
}
if(_5b9=_5b7.id){
_5b8.push("element.id == "+repr(_5b9));
}
if(_5b9=_5b7.tagName){
_5b8.push("element.tagName.toUpperCase() == "+repr(_5b9));
}
if((_5b9=_5b7.classNames).length>0){
for(i=0;i<_5b9.length;i++){
_5b8.push("MochiKit.DOM.hasElementClass(element, "+repr(_5b9[i])+")");
}
}
if((_5b9=_5b7.pseudoClassNames).length>0){
for(i=0;i<_5b9.length;i++){
var _5bc=_5b9[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _5bd=_5bc[1];
var _5be=_5bc[2];
switch(_5bd){
case "root":
_5b8.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_5bc=_5be.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_5bc){
throw "Invalid argument to pseudo element nth-child: "+_5be;
}
var a,b;
if(_5bc[0]=="odd"){
a=2;
b=1;
}else{
if(_5bc[0]=="even"){
a=2;
b=0;
}else{
a=_5bc[2]&&parseInt(_5bc)||null;
b=parseInt(_5bc[3]);
}
}
_5b8.push("this.nthChild(element,"+a+","+b+","+!!_5bd.match("^nth-last")+","+!!_5bd.match("of-type$")+")");
break;
case "first-child":
_5b8.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_5b8.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_5b8.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_5b8.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_5b8.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_5b8.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_5b8.push("element.childNodes.length == 0");
break;
case "enabled":
_5b8.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_5b8.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_5b8.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _5c1=new MochiKit.Selector.Selector(_5be);
_5b8.push("!( "+_5c1.buildMatchExpression()+")");
break;
}
}
}
if(_5b9=_5b7.attributes){
MochiKit.Base.map(function(_5c2){
var _5c3="MochiKit.DOM.getNodeAttribute(element, "+repr(_5c2.name)+")";
var _5c4=function(_5c5){
return _5c3+".split("+repr(_5c5)+")";
};
switch(_5c2.operator){
case "=":
_5b8.push(_5c3+" == "+repr(_5c2.value));
break;
case "~=":
_5b8.push(_5c3+" && MochiKit.Base.findValue("+_5c4(" ")+", "+repr(_5c2.value)+") > -1");
break;
case "^=":
_5b8.push(_5c3+".substring(0, "+_5c2.value.length+") == "+repr(_5c2.value));
break;
case "$=":
_5b8.push(_5c3+".substring("+_5c3+".length - "+_5c2.value.length+") == "+repr(_5c2.value));
break;
case "*=":
_5b8.push(_5c3+".match("+repr(_5c2.value)+")");
break;
case "|=":
_5b8.push(_5c3+" && "+_5c4("-")+"[0].toUpperCase() == "+repr(_5c2.value.toUpperCase()));
break;
case "!=":
_5b8.push(_5c3+" != "+repr(_5c2.value));
break;
case "":
case undefined:
_5b8.push(_5c3+" != null");
break;
default:
throw "Unknown operator "+_5c2.operator+" in selector";
}
},_5b9);
}
return _5b8.join(" && ");
},compileMatcher:function(){
this.match=new Function("element","if (!element.tagName) return false;                 return "+this.buildMatchExpression());
},nthChild:function(_5c6,a,b,_5c9,_5ca){
var _5cb=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_5c6.parentNode.childNodes);
if(_5ca){
_5cb=MochiKit.Base.filter(function(node){
return node.tagName==_5c6.tagName;
},_5cb);
}
if(_5c9){
_5cb=MochiKit.Iter.reversed(_5cb);
}
if(a){
var _5ce=MochiKit.Base.findIdentical(_5cb,_5c6);
return ((_5ce+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_5cb,_5c6)+1;
}
},isUIElement:function(_5cf){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_5cf.tagName.toLowerCase())>-1;
},findElements:function(_5d0,axis){
var _5d2;
if(axis==undefined){
axis="";
}
function inScope(_5d3,_5d4){
if(axis==""){
return MochiKit.DOM.isChildNode(_5d3,_5d4);
}else{
if(axis==">"){
return _5d3.parentNode==_5d4;
}else{
if(axis=="+"){
return _5d3==nextSiblingElement(_5d4);
}else{
if(axis=="~"){
var _5d5=_5d4;
while(_5d5=nextSiblingElement(_5d5)){
if(_5d3==_5d5){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_5d2=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_5d2)){
if(!_5d0||inScope(_5d2,_5d0)){
return [_5d2];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_5d0=(_5d0||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_5d0){
throw "> combinator not allowed without preceeding expression";
}
_5d0=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_5d0.childNodes);
}else{
if(axis=="+"){
if(!_5d0){
throw "+ combinator not allowed without preceeding expression";
}
_5d0=nextSiblingElement(_5d0)&&[nextSiblingElement(_5d0)];
}else{
if(axis=="~"){
if(!_5d0){
throw "~ combinator not allowed without preceeding expression";
}
var _5d8=[];
while(nextSiblingElement(_5d0)){
_5d0=nextSiblingElement(_5d0);
_5d8.push(_5d0);
}
_5d0=_5d8;
}
}
}
}
if(!_5d0){
return [];
}
var _5d9=MochiKit.Base.filter(MochiKit.Base.bind(function(_5da){
return this.match(_5da);
},this),_5d0);
return _5d9;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_5db,_5dc){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_5dd){
var _5de="";
return MochiKit.Iter.reduce(function(_5df,expr){
if(match=expr.match(/^[>+~]$/)){
_5de=match[0];
return _5df;
}else{
var _5e1=new MochiKit.Selector.Selector(expr);
var _5e2=MochiKit.Iter.reduce(function(_5e3,_5e4){
return MochiKit.Base.extend(_5e3,_5e1.findElements(_5e4||_5db,_5de));
},_5df,[]);
_5de="";
return _5e2;
}
},_5dd.replace(/(^\s+|\s+$)/g,"").split(/\s+/),[null]);
},_5dc));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
var m=MochiKit.Base;
this.$$=this.findDocElements;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Async");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Async depends on MochiKit.Base!";
}
if(typeof (MochiKit.Async)=="undefined"){
MochiKit.Async={};
}
MochiKit.Async.NAME="MochiKit.Async";
MochiKit.Async.VERSION="1.4";
MochiKit.Async.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Async.toString=function(){
return this.__repr__();
};
MochiKit.Async.Deferred=function(_5e6){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_5e6;
this.silentlyCancelled=false;
this.chained=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _5e7;
if(this.fired==-1){
_5e7="unfired";
}else{
if(this.fired===0){
_5e7="success";
}else{
_5e7="error";
}
}
return "Deferred("+this.id+", "+_5e7+")";
},toString:MochiKit.Base.forwardCall("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new self.CancelledError(this));
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel();
}
}
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
},errback:function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _5f2=this.chain;
var _5f3=this.fired;
var res=this.results[_5f3];
var self=this;
var cb=null;
while(_5f2.length>0&&this.paused===0){
var pair=_5f2.shift();
var f=pair[_5f3];
if(f===null){
continue;
}
try{
res=f(res);
_5f3=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self._resback(res);
self.paused--;
if((self.paused===0)&&(self.fired>=0)){
self._fire();
}
};
this.paused++;
}
}
catch(err){
_5f3=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_5f3;
this.results[_5f3]=res;
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(req){
return MochiKit.Base.evalJSON(req.responseText);
},succeed:function(_5fb){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_5fd){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _600=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_600.length;i++){
var func=_600[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e){
}
}
var _605=null;
try{
_605=this.status;
if(!_605&&m.isNotEmpty(this.responseText)){
_605=304;
}
}
catch(e){
}
if(_605==200||_605==201||_605==204||_605==304||_605==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_609){
if(typeof (_609)=="undefined"||_609===null){
_609="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_609);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,opts){
var self=MochiKit.Async;
return self.callLater(0,self._doXHR,url,opts);
},_doXHR:function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:""},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,true,opts.username,opts.password);
}else{
req.open(opts.method,url,true);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _616=opts.headers;
if(!m.isArrayLike(_616)){
_616=m.items(_616);
}
for(var i=0;i<_616.length;i++){
var _618=_616[i];
var name=_618[0];
var _61a=_618[1];
req.setRequestHeader(name,_61a);
}
}
return self.sendXMLHttpRequest(req,opts.sendContent);
},_buildURL:function(url){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
},wait:function(_623,_624){
var d=new MochiKit.Async.Deferred();
var m=MochiKit.Base;
if(typeof (_624)!="undefined"){
d.addCallback(function(){
return _624;
});
}
var _627=setTimeout(m.bind("callback",d),Math.floor(_623*1000));
d.canceller=function(){
try{
clearTimeout(_627);
}
catch(e){
}
};
return d;
},callLater:function(_628,func){
var m=MochiKit.Base;
var _62b=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_628).addCallback(function(res){
return _62b();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _62e;
if(this.locked){
_62e="locked, "+this.waiting.length+" waiting";
}else{
_62e="unlocked";
}
return "DeferredLock("+this.id+", "+_62e+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Async.DeferredList=function(list,_630,_631,_632,_633){
MochiKit.Async.Deferred.apply(this,[_633]);
this.list=list;
var _634=[];
this.resultList=_634;
this.finishedCount=0;
this.fireOnOneCallback=_630;
this.fireOnOneErrback=_631;
this.consumeErrors=_632;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_634.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_630){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_638,_639,_63a){
this.resultList[_638]=[_639,_63a];
this.finishedCount+=1;
if(this.fired==-1){
if(_639&&this.fireOnOneCallback){
this.callback([_638,_63a]);
}else{
if(!_639&&this.fireOnOneErrback){
this.errback(_63a);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_639&&this.consumeErrors){
_63a=null;
}
return _63a;
};
MochiKit.Async.gatherResults=function(_63b){
var d=new MochiKit.Async.DeferredList(_63b,false,true,false);
d.addCallback(function(_63d){
var ret=[];
for(var i=0;i<_63d.length;i++){
ret.push(_63d[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _642;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_642=r;
}else{
if(r instanceof Error){
_642=self.fail(r);
}else{
_642=self.succeed(r);
}
}
}
catch(e){
_642=self.fail(e);
}
return _642;
};
MochiKit.Async.EXPORT=["AlreadyCalledError","CancelledError","BrowserComplianceError","GenericError","XMLHttpRequestError","Deferred","succeed","fail","getXMLHttpRequest","doSimpleXMLHttpRequest","loadJSONDoc","wait","callLater","sendXMLHttpRequest","DeferredLock","DeferredList","gatherResults","maybeDeferred","doXHR"];
MochiKit.Async.EXPORT_OK=["evalJSONRequest"];
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_646){
this.deferred=_646;
});
ne("CancelledError",function(_647){
this.deferred=_647;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);


